## Create the server package

You'll need to run a command that instructs Velociraptor to create a server
Debian package using the linux binary specified. The package will contain the
Velociraptor executable, the server configuration file and relevant startup
scripts.

Use the following command:

{{< tabs >}}
{{% tab name="Linux" %}}
```shell
./velociraptor --config server.config.yaml debian server --binary velociraptor-linux-amd64
```
{{% /tab %}}
{{% tab name="Windows" %}}
```shell
velociraptor.exe --config server.config.yaml debian server --binary velociraptor-linux-amd64
```
{{% /tab %}}
{{% tab name="macOS" %}}
```shell
./velociraptor --config server.config.yaml debian server --binary velociraptor-linux-amd64
```
{{% /tab %}}
{{< /tabs >}}


{{% notice warning %}}

The Debian package contains the server configuration file, which contains all
required key materials. Make sure this file is well protected since a compromise
of the file will leak private key material enabling a MITM attack against
Velociraptor.

{{% /notice %}}

## Install a new server

Push the debian package to the server using Secure Copy Protocol (SCP):

```shell
scp velociraptor_server.deb user@123.45.67.89:/tmp/
```

## Install the package

Run the following command to install the server package:

```shell
sudo dpkg -i velociraptor_server.deb
```

The service adds a new Velociraptor user to run under. You can now access the
Velociraptor server using your browser.



## Deploying the server

Once a server configuration file is created, you need to create a server
installation package which contains the Velociraptor executable, the server
configuration file and relevant startup scripts.

You then install the server installation package on your server using standard
package management tools.

### Creating the server installation package

{{% notice info %}}

While the server installation package can be _created_ on any platform, as shown
below, we strongly recommend _running_ the server on Linux.
Running the server on Windows or macOS is technically possible but unsupported
and we therefore don't provide any server packaging options for those platforms.

{{% /notice %}}

The following command will create the server deb package:

{{< tabs >}} {{% tab name="Linux" %}}
```shell
./velociraptor-linux debian server --config server.config.yaml --binary velociraptor-linux-<arch>
```
{{% /tab %}}
{{% tab name="Windows" %}}
```shell
velociraptor-windows.exe debian server --config server.config.yaml --binary velociraptor-linux-<arch>
```
{{% /tab %}}
{{% tab name="macOS" %}}
```shell
./velociraptor-darwin debian server --config server.config.yaml --binary velociraptor-linux-<arch>
```
{{% /tab %}}
{{< /tabs >}}

This will create a deb package named `velociraptor_server_<version>_<arch>.deb`
containing the server configuration plus the installation scripts necessary to
install the server as a service on debian-based systems. To create a server
installation package for rpm-based systems the command `velociraptor rpm server`
can be substituted in the above step.

The basename of the output file name can be specified adding the `--output` flag
to the command if you want anything other than the default name.

If the `--binary` flag is not used then the package will be created using the
Velociraptor binary which invoked the command. That is, the `--binary` flag is
not needed if you are creating the server installation package on the same
system or architecture that you intend to deploy the server on.

Additional command options can be viewed by running `velociraptor debian server -h`
or `velociraptor rpm server -h`.

{{% notice warning %}}

Make sure the installation package file is well protected. A compromise of the
file will leak private key material enabling a MITM attack against Velociraptor.

{{% /notice %}}

### Installing the server installation package

The server installation package is installed using the regular package
management tools.

**Debian-based systems:**

```shell
sudo dpkg -i velociraptor_server_<version>_<arch>.deb
```

**RPM-based systems:**

```shell
sudo rpm -Uvh velociraptor_server_<version>_<arch>.rpm
```

On Debian-based systems the installation output should look something like this.

```sh
$ sudo dpkg -i velociraptor_server_0.74.0.rc1_amd64.deb
Selecting previously unselected package velociraptor-server.
(Reading database ... 527397 files and directories currently installed.)
Preparing to unpack velociraptor_server_0.74.0.rc1_amd64.deb ...
Unpacking velociraptor-server (0.74.0.rc1) ...
Setting up velociraptor-server (0.74.0.rc1) ...
Adding group `velociraptor' (GID 138) ...
Done.
Adding system user `velociraptor' (UID 128) ...
Adding new user `velociraptor' (UID 128) with group `velociraptor' ...
Not creating home directory `/etc/velociraptor/'.
Created symlink /etc/systemd/system/multi-user.target.wants/velociraptor_server.service → /etc/systemd/system/velociraptor_server.service.
```

On systems that use systemd you can check the service status after installation
using the command `systemctl status velociraptor_server.service`.

```
$ sudo systemctl status velociraptor_server.service
● velociraptor_server.service - Velociraptor server
     Loaded: loaded (/etc/systemd/system/velociraptor_server.service; enabled; vendor preset: enabled)
     Active: active (running) since Sat 2025-02-22 12:33:23 SAST; 1min 1s ago
   Main PID: 4941 (velociraptor.bi)
      Tasks: 10 (limit: 4537)
     Memory: 54.1M
        CPU: 2.163s
     CGroup: /system.slice/velociraptor_server.service
             └─4941 /usr/local/bin/velociraptor.bin --config /etc/velociraptor/server.config.yaml frontend

Feb 22 12:33:23 linux64-client systemd[1]: Started Velociraptor server.

```

## Server upgrades

To upgrade the Velociraptor server to a new version, simply download
the latest release binary from the [GitHub Release
Page](https://github.com/Velocidex/velociraptor/releases) and
regenerate a new debian package as described above, but using the
existing configuration file.

{{% notice note "Backing up your configuration file" %}}

The configuration file contains cryptographic keys that allow clients
and server to communicate. Each time the configuration is regenerated
(e.g. using `velociraptor config generate`), new keys are created.

It is imperative to backup the configuration file somewhere safe
(perhaps offline) and re-use the same file when upgrading to a new
version of Velociraptor in order to preserve the key material and
maintain client communication.

{{% /notice %}}

From time to time, the schema of the configuration file may evolve
with newer versions. When a newer versions of Velociraptor encounters
an older configuration file, it attempts to upgrade the configuration
file to the latest version. This happens automatically and it is
usually a seamless process.

During the debian package preparation the upgraded file is embedded
into the server package so you will receive an upgraded configuration
file installed to the `/etc/` directory. You can see the version that
wrote the configuration file in the `version` part of the
configuration file.

{{% notice tip "Upgrading servers" %}}

If you wanted to completely change the way the server is configured by
regenerating the config file (e.g. if you need to switch from self
signed to autocert server) you may need to stand up a completely new
server (with a different DNS name, certificates, keys etc).

You can still use the old server in order to push the new MSI to
existing clients, but as the new MSI is installed, the new client
config file overwrites the old one and the new velociraptor client
will connect to the new server.

This method allows the orderly migration of Velociraptor clients from
an old server to a new server by simply user remote upgrade.

{{% /notice %}}

For more information about additional upgrade considerations, see
[How do I upgrade my server and clients?]({{< ref "/knowledge_base/tips/upgrading/" >}})

## Reverting versions

It is generally ok to revert from later versions to earlier versions
since the migration process is generally non-destructive.

## Uninstalling the server

The server can be uninstalled with the following command.

```sh
sudo dpkg -r velociraptor-server
```