name: Windows.Detection.Malfind
author: Matt Green - @mgreen27
description: |
    This artifact checks the VAD for executable sections that are not maped to disk 
    and has suspicious content which may indicate process injection.
    
    User options allow targetting process, modifying suspicious content yara, or 
    upload of suspicious section.
    
    Default suspicious content includes headers: MZ, default cobalt strike stomped, 
    or well known suspicious strings.
    
    Note: Expect some false positives and triage accordingly.  
    To output all executable sections without a file backed on disk add the yara 
    rule:  rule always_true {  condition: true }  
    
    

parameters:
  - name: ProcessRegex
    description: A regex applied to process names.
    default: .
    type: regex
  - name: PidRegex
    default: .
    type: regex
  - name: SuspiciousContent
    description: A yara rule of suspicious section content 
    type: yara
    default: |
        rule suspicious {
            meta:
                author = "Matt Green - @mgreen27"
                description = "Suspicious unbacked on disk executable section content"
                date = "2022-09-30"
                
            strings:
                $header1 = "MZ"
                $header2 = { 00 00 41 52 55 48 } // cobalt strike stomped dll
                $header3 = { FC } // shellcode stagers
                 
                $body1 = "This program cannot be run in DOS mode" 
                $body2 = "wininet"  
                $body3 = "hws2_"  
                $body4 = "hwini"  
                $body5 = { FC E8 8? 00 00 00 60 }     // shellcode prologe in metasploit
                
            condition:
                $header1 at 0 or $header2 at 0 or $header3 at 0
                    or any of ($body*) 
        }
        rule win_meterpreter_auto {
            meta:
                author = "Felix Bilstein - yara-signator at cocacoding dot com"
                date = "2022-08-05"
                version = "1"
                description = "Detects win.meterpreter."
                info = "autogenerated rule brought to you by yara-signator"
                tool = "yara-signator v0.6.0"
                signator_config = "callsandjumps;datarefs;binvalue"
                malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.meterpreter"
                malpedia_rule_date = "20220805"
                malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
                malpedia_version = "20220808"
                malpedia_license = "CC BY-SA 4.0"
                malpedia_sharing = "TLP:WHITE"
        
            strings:
                $sequence_0 = { e22b e5f6 4f 1c8b }
                $sequence_1 = { 90 90 90 55 e4ec 53 8b22 }
                $sequence_2 = { 50 686cd4408e ffd6 8b0d???????? 83c18a }
                $sequence_3 = { 008b35a8c19f 006860 2f 0000 52 ffd6 }
                $sequence_4 = { 8b87047945f4 6a01 50 52 c745fc00000000 ff08 98 }
                $sequence_5 = { 57 40 388bf083c4cf 86f6 }
                $sequence_6 = { 8932 8b700c 83c204 4e 3bce 74ef ff9a0c8b5c03 }
                $sequence_7 = { 043b 8801 41 0fc2049088 0135???????? 4f 75b5 }
                $sequence_8 = { 6c 50 048b 55 1491 48 }
                $sequence_9 = { 76e1 8bf0 85f6 750e }
        
            condition:
                7 of them
        }

  - name: UploadSection
    description: Upload suspicious section.
    type: bool

sources:
  - query: |
      LET processes = SELECT Pid, Name,
        Exe,
        CommandLine,
        TokenIsElevated,
        CreateTime,
        IsWow64,
        Username, OwnerSid,
        Ppid,
        Threads, PebBaseAddress
        FROM pslist()
        WHERE Name =~ ProcessRegex
            AND format(format="%d", args=Pid) =~ PidRegex

      LET hits = SELECT * FROM foreach(
          row=processes,
          query={
            SELECT CreateTime,Pid, Name,
                format(format='%x-%x', args=[Address, Address+Size]) AS AddressRange,
                Protection, Address as _Address,
                Size as SectionSize
            FROM vad(pid=Pid)
            WHERE NOT MappingName
                AND Protection =~ 'X'
          })

      LET results = SELECT * FROM foreach(row=hits,
        query={
            SELECT 
                CreateTime,Pid, Name,_Address, AddressRange,Protection,SectionSize,
                format(format='% x',args=read_file(accessor='process',filename=Pid,offset=_Address,
                    length=2)) as HexHeader,
                magic(path=read_file(accessor='process',filename=Pid,offset=_Address,length=SectionSize),accessor='data') as DataMagic,
                read_file(accessor='process',filename=Pid,offset=_Address,
                    length=if(condition= Size>10000, then=10000, else=SectionSize)
                        ) as SectionData
            FROM yara(accessor='process',files=str(str=Pid), rules=SuspiciousContent,
                start=_Address, end=_Address+SectionSize,key='X',number=1)
            LIMIT 1
        })
        
      LET upload_section = SELECT *,
                upload(accessor='data', file=read_file(accessor='process',filename=Pid,offset=_Address,length=SectionSize),
                    name=format(format='%v-%v_%v.bin',args= [ Name, Pid, AddressRange ])
                    ).StoredName as SectionDump
            FROM results
      
      SELECT *, 
        process_tracker_callchain(id=Pid).Data as ProcessChain
      FROM if(condition= UploadSection,
                then= upload_section,
                else= results)
        
column_types:
  - name: SectionData
    type: hex
