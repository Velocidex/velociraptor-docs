name: Windows.ETW.Powershell
author: Matt Green - @mgreen27
description: |
    This artifact enables Powershell scriptblock and commandlet load monitoring.  
    It uses the ETW provider: Microsoft-Windows-PowerShell  
    
    Detection logic is managed by several global ignore entries and an IOC csv.  

    ##### Global Ignore  
    IngorePaths - List of path regex to ignore  
    IgnoreProcessName - ProcessName to ignore  
    IgnoreParentProcessName - Ignore events generated by a child process 
      
    ##### IocCsv 
    Name - detection name.  
    Type - type of detection: ScriptBlock,Commandlet or ScriptBlock|Commandlet  
    Regex - regex to search for  
    Ignore - regex to ignore  
    DateModified - date detection last modified  
    

type: CLIENT_EVENT

parameters:
  - name: IgnoreProcessName
    description: "Regex of process names to ignore"
    default: ^(MonitoringHost|dsac)\.exe$
  - name: IgnoreParentProcessName
    description: Regex of parent for child generated events to ignore
  - name: IgnorePaths
    description: "List of path regex to ignore. This list will be joined and excluded."
    default: |
        \\SDIAG_.{8}-(.{4}-){3}.{12}\\
        \\Windows Defender Advanced Threat Protection\\
        \\Microsoft Azure Backup Server\\
        \\Program Files\\Microsoft Dependency Agent\\
        \\(Program Files|ProgramData)\\Amazon\\(WorkSpaces|EC2-Windows)
        \\Program Files(|\(x86\))\\Symantec\\Symantec Endpoint
        \\Program Files(|\(x86\))\\Automox\\execDir
  - name: IocCsv
    type: csv
    description: "Application name Regex to enable filtering on source."
    default: |
        Name,Type,Regex,Ignore,DateModified
        T1059.001-Cobalt Strike Powershell Loader,ScriptBlock,\$Doit|-bxor 35,,2022-09-14
        Test-Commandlet,Commandlet,Get-Process|Get-Service|Write-Host,,2022-09-14
        
sources:
  - query: |
      -- materialize ignore path regex where exist and not \s
      LET ScriptIgnore = SELECT _value as PathRegex 
        FROM foreach(row=split(string=IgnorePaths,sep='\n')) 
        WHERE PathRegex AND NOT PathRegex =~ '^\\s+$'
      LET ScriptIgnorePath <= join(array=ScriptIgnore.PathRegex,sep='|')
      
      -- materialize scriptblock regex for initial pass
      LET ScriptBlock = SELECT Regex,Type FROM IocCsv WHERE Type =~ 'ScriptBlock'
      LET ScriptBlockRegex <= join(array=ScriptBlock.Regex,sep='|')
      
      -- materialize Commandlet regex for initial pass
      LET Commandlet = SELECT Regex,Type FROM IocCsv WHERE Type =~ 'Commandlet'
      LET CommandletRegex <= join(array=Commandlet.Regex,sep='|')
      
      -- watch ETW provider and first round data manipulation
      LET hits = SELECT 
            timestamp(epoch=timestamp(string=System.TimeStamp).unix) as EventTime,
            System.ID as EventID,
            System.ProcessID as ProcessID,
            get(member="EventData") AS EventData
      FROM watch_etw(guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}") 
      WHERE EventID = ( 4104, 7937 )
        AND ( EventData.ScriptBlockText OR EventData.Payload =~ '^Command .+ is Started\.\r\n$' )
        AND ( EventData.ScriptBlockText =~ ScriptBlockRegex
           OR EventData.Payload =~ CommandletRegex )
      
      -- print rows
      SELECT * FROM foreach(row=hits,query={
            SELECT
                EventTime,
                dict(
                    Name=Name,
                    Type=Type,
                    Regex=Regex,
                    Ignore=Ignore
                ) as Detection,
                EventID,
                if(condition= EventID=4104,
                    then= EventData.ScriptBlockText,
                    else= regex_replace(
                            source=EventData.Payload,
                            re='^Command | is Started\.\r\n$',
                            replace=''
                    )) as Payload,
                if(condition= EventID=4104,
                    then= EventData,
                    else= dict(Payload=EventData.Payload,
                        ContextInfo=parse_string_with_regex(string=EventData.ContextInfo,
                        regex=[
                            'Severity = (?P<Severity>[^\\r]*)',
                            'Host Name = (?P<HostName>[^\\r]*)',
                            'Host Version = (?P<HostVersion>[^\\r]*)',
                            'Host ID = (?P<HostID>[^\\r]*)',
                            'Host Application = (?P<HostApplication>[^\\r]*)',
                            'Engine Version = (?P<EngineVersion>[^\\r]*)',
                            'Runspace ID = (?P<RunspaceID>[^\\r]*)',
                            'Pipeline ID = (?P<PipelineID>[^\\r]*)',
                            'Command Name= (?P<CommandName>[^\\r]*)',
                            'CommandType = (?P<CommandType>[^\\r]*)',
                            'Script Name = (?P<ScriptName>[^\\r]*)',
                            'Command Path = (?P<CommandPath>[^\\r]*)',
                            'Sequence Number = (?P<SequenceNumber>[^\\r]*)',
                            'User = (?P<User>[^\\r]*)',
                            'Connected User = (?P<ConnectedUser>[^\\r]*)',
                            'Shell ID = (?P<ShellID>[^\\r]*)'
                        ]),
                        UserData=EventData.UserData)) as EventData,
                process_tracker_callchain(id=ProcessID).Data[-1] as ProcessInfo,
                process_tracker_callchain(id=ProcessID).Data as ProcessChain
            FROM IocCsv
            WHERE 
                if(condition= EventID=4104, then= Type=~'ScriptBlock',else= Type=~'Commandlet' )
                AND NOT if(condition=IgnoreProcessName, 
                    then= ProcessInfo.Name =~ IgnoreProcessName, else= False)
                AND NOT if(condition=IgnoreParentProcessName, 
                    then= ProcessChain.Name[-2] =~ IgnoreParentProcessName, else= False)
                AND Payload =~ Regex 
                AND NOT if(condition=Ignore, then= Payload=~Ignore, else= False)
                AND NOT if(condition=IgnorePaths,
                    then= EventData.Path =~ ScriptIgnorePath 
                        OR EventData.ContextInfo.CommandPath =~ ScriptIgnorePath,
                            else= False)
            LIMIT 1 -- limts to 1 row per IocCsv entry.
        })
