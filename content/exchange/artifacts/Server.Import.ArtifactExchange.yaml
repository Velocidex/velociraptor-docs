name: Server.Import.ArtifactExchange
author: Matt Green - @mgreen27
description: |
   This artifact will automatically import the latest artifact exchange bundle 
   into the current server.
   
   We can filter on ArtifactNameRegex or add a list of Artifacts (list takes preference).
   Select DoIt to import content.  
            
type: SERVER

required_permissions:
- SERVER_ADMIN

parameters:
  - name: ExchangeURL
    default: https://github.com/Velocidex/velociraptor-docs/raw/gh-pages/exchange/artifact_exchange.zip
  - name: Prefix
    description: The prefix we want to add to added artifacts.
    default: Exchange.
  - name: ArtifactNameRegex
    description: Regex of Artifact names to add.
    default: .
  - name: DoIt
    description: When selected will add artifacts, else will show.
    type: bool
  - name: ArtifactList
    description: Copy and paste custom list with artifact per line.
     
sources:
  - query: |
      -- firstly split ArtifactList
      Let MyList = SELECT _value as Name FROM foreach(row=split(string=ArtifactList,sep='\\s'))
      
      -- download artifact zip from URL
      LET web_content <= SELECT Content FROM http_client(
            remove_last=TRUE, tempfile_extension=".zip", url=ExchangeURL)
      
      -- function to clean up removing Custom. prefix from Definition.        
      LET normalise(Definition,OldName,Name) = regex_replace(source=Definition,
                re= 'name: ' + OldName, replace='name: ' + Name)
        
      -- determine which definitions are in scope
      LET definitions = SELECT 
                parse_yaml(filename=Definition, accessor='data').name as OldName,
                regex_replace(source=parse_yaml(filename=Definition, 
                    accessor='data').name,re='^Custom\\.',replace='') as Name,
                Definition
        FROM foreach(row= web_content, 
            query={
                SELECT read_file(accessor="zip", filename=FullPath) AS Definition
                FROM glob(globs=url(path=Content, fragment='/**/*.yaml'), accessor="zip")
            })
        WHERE if(condition=MyList.Name[0]='',
            then= Name=~ArtifactNameRegex OR OldName=~ArtifactNameRegex,
            else= Name in MyList.Name OR OldName in MyList.Name )
      
      -- show and add definition functions to return same fields
      LET show_definitions = SELECT parse_yaml(filename=Definition, accessor='data') as Definition FROM definitions
      LET add_definitions = SELECT artifact_set(prefix=Prefix, definition=normalise(Definition=Definition,Old=OldName,New=Name)) AS Definition FROM definitions
      
      -- output rows
      SELECT
        Definition.name as Name,
        Definition.description as Description,
        Definition.author as Author,
        Definition as _Definition,
        DoIt
      FROM if(condition= DoIt,
        then= add_definitions,
        else= show_definitions)
