name: Windows.EventLogs.Hayabusa
description: |
   [Hayabusa](https://github.com/Yamato-Security/hayabusa) is a Windows event log fast forensics timeline generator and threat hunting tool.
   
   This artifact runs Hayabusa on the endpoint against the specified Windows event log directory, and generates and uploads a single CSV file for further analysis with excel, timeline explorer, elastic stack, etc.

author: Eric Capuano - @eric_capuano, Whitney Champion - @shortxstack, Zach Mathis - @yamatosecurity

tools:
 - name: Hayabusa
   url: https://github.com/Yamato-Security/hayabusa/releases/download/v2.1.0/hayabusa-2.1.0-win-64-bit.zip

precondition: SELECT OS From info() where OS = 'windows'

parameters:
 - name: UTC
   description: "Output time in UTC format"
   type: bool
   default: Y
 - name: UpdateRules
   description: "Update rules before scanning"
   type: bool
   default: Y
 - name: NoisyRules
   description: "Enable rules marked as noisy"
   type: bool
   default: N
 - name: OutputProfile
   description: "Decide how much data you want back"
   default: standard
   type: choices
   choices:
     - minimal
     - standard
     - verbose
     - all-field-info
     - all-field-info-verbose
     - super-verbose
     - timesketch-minimal
     - timesketch-verbose
 - name: EIDFilter
   description: "Scan only common Event IDs for quicker scans"
   type: bool
   default: N
 - name: MinimalLevel
   description: "Minimum level for rules"
   default: informational
   type: choices
   choices:
     - informational
     - low
     - medium
     - high
     - critical
 - name: Threads
   description: "Number of threads"
   type: int
   default: 2

sources:
 - query: |

        LET Toolzip <= SELECT FullPath FROM Artifact.Generic.Utils.FetchBinary(ToolName="Hayabusa", IsExecutable=FALSE)

        LET TmpDir <= tempdir()

        LET UnzipIt <= SELECT * FROM unzip(filename=Toolzip.FullPath, output_directory=TmpDir)

        LET HayabusaExe <= TmpDir + '\\hayabusa-2.1.0-win-x64.exe'
       
        LET Update_Rules <= if(condition=UpdateRules, then={ SELECT * FROM execve(argv=['cmd.exe', '/c', 'cd', TmpDir, '&', HayabusaExe, 'update-rules']) })

        LET Random <= rand(range=100000000000)
        
        LET CSVFile <= TmpDir + '\\hayabusa_results_'+str(str=Random)+'.csv'

        LET cmdline <= array(a=HayabusaExe)
        LET cmdline <= cmdline + ("csv-timeline", "--live-analysis",
                                  "--output", CSVFile,
                                  "--min-level", MinimalLevel,
                                  "--profile", OutputProfile,
                                  "--quiet", "--no-summary",
                                  "--thread-number", Threads)

        LET cmdline <= if(condition=UTC, then=cmdline + array(a="--UTC"), else=cmdline)
        LET cmdline <= if(condition=NoisyRules, then=cmdline + array(a="--enable-noisy-rules"), else=cmdline)
        LET cmdline <= if(condition=EIDFilter, then=cmdline + array(a="--eid-filter"), else=cmdline)

        LET ExecHB <= SELECT * FROM execve(argv=cmdline, sep="\n", length=9999999)
                       
        LET UploadCSV <= upload(file=CSVFile,
                          accessor="file",
                          name='hayabusa_results_'+str(str=Random)+'.csv')
            
        LET UploadCSVResults <= SELECT *, FullPath, Size, Modifed, Type FROM UploadCSV
                       
        LET Results <= SELECT *, timestamp(string=Timestamp) AS EventTime FROM parse_csv(filename=CSVFile)
        
        SELECT * FROM Results