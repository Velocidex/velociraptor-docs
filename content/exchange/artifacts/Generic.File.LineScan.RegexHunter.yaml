name: Generic.File.LineScan.RegexHunter
author: Kaizar
description: |
  A versatile artifact that scans the contents of text files line by line and reports 
  any line that matches a user-supplied regular expression.
  This artifact is designed for flexible content inspection across any operating system—
  Linux, Windows. It can be used to detect indicators of compromise, identify 
  suspicious commands in configuration files, or validate specific text patterns.
  The user can supply one or more glob paths and a custom regex pattern. 
  Matching lines are returned with their file names, and—if enabled—the corresponding 
  files can be uploaded for further analysis.
  The idea for this artifact originated while hunting for **suspicious cron jobs** on 
  Linux systems—such as entries that download payloads, execute scripts from temporary 
  directories, or use encoded commands. As a result, several common cron-related paths 
  and a default suspicious regex pattern are provided for convenience.
  
type: CLIENT

parameters:
  - name: PathGlobs
    type: csv
    description: "List of glob paths to search."
    default: |
      Glob
      /etc/crontab
      /etc/cron.d/*
      /etc/cron.daily/*
      /etc/cron.hourly/*
      /etc/cron.weekly/*
      /etc/cron.monthly/*
      /var/spool/cron/*
      /var/spool/cron/crontabs/*

  - name: SuspiciousRegex
    type: regex
    description: "Regex pattern to detect potentially suspicious commands or payloads."
    default: "(curl|wget|bash|/tmp/|/var/tmp/|/dev/shm|base64|eval|python|perl|crontab -e|@reboot)"

  - name: UploadMatches
    type: bool
    description: "If true, upload files that contain regex matches."
    default: false

sources:
  - query: |
      -- Step 1: Gather files from all provided globs (no symlinks)
      LET found_files = SELECT OSPath, Name, Size
      FROM glob(
        globs=PathGlobs.Glob,
        nosymlink=true
      )
      WHERE NOT IsDir AND NOT IsLink

      -- Step 2: Scan each file line by line for regex matches
      LET regex_hits = SELECT *
      FROM foreach(
        row={ SELECT OSPath FROM found_files },
        query={
          SELECT
            OSPath AS FileName,
            Line AS LineMatch
          FROM parse_lines(filename=OSPath)
          WHERE Line =~ SuspiciousRegex
        }
      )

      -- Step 3: Upload files with matches if enabled
      LET upload_hits = SELECT
        FileName,
        LineMatch,
        upload(file=FileName, name=FileName) AS UploadedFile
      FROM regex_hits

      -- Step 4: Return results with or without upload
      SELECT *
      FROM if(
        condition=UploadMatches,
        then=upload_hits,
        else=regex_hits
      )
