name: Generic.Detection.log4jRCE
author: Matt Green - @mgreen27
description: |
  Detection for detction of exploitation attempts against log4j RCE 
  vulnerability CVE-2021-44228
  
  This artifact returns a list of target files then runs Yara over the target 
  list.  

  There are 3 kinds of Yara rules that can be deployed:  

  1. Url link to a yara rule.  
  2. Shorthand yara in the format `wide nocase ascii:string1,string2,string3`.  
  3. or a Standard Yara rule attached as a parameter.  

  Only one method of Yara will be applied and search order is as above.

  The artifact leverages Glob for search so relevant filters can be applied
  including Glob, Size and date. Date filters will target files with a timestamp 
  before LatestTime and after EarliestTime. The artifact also has an option to 
  upload any files with Yara hits.

  Some examples of path glob may include:

  * Specific binary: `/usr/bin/ls`
  * Wildcards: `/var/www/*.js`
  * More wildcards: `/var/www/**/*.js`
  * Multiple extentions: `/var/www/*\.{php,aspx,js,html}`
  * Windows: `C:/Users/**/*.{exe,dll,ps1,bat}`
  
  NOTE: this artifact runs the glob plugin with the nosymlink switch turned on. 
  This will NOT follow any symlinks and may cause unexpected results if 
  unknowingly targeting a folder with symlinks.
  

type: CLIENT
parameters:
  - name: PathGlob
    description: Only file names that match this glob will be scanned.
    default: /var/log/**
  - name: SizeMax
    description: maximum size of target file.
  - name: SizeMin
    description: minimum size of target file.
  - name: UploadHits
    type: bool
  - name: DateAfter
    type: timestamp
    description: "search for events after this date. YYYY-MM-DDTmm:hh:ssZ"
  - name: DateBefore
    type: timestamp
    description: "search for events before this date. YYYY-MM-DDTmm:hh:ssZ"
  - name: YaraUrl
    description: If configured will attempt to download Yara rules form Url
    default:
  - name: ShortHandYara
    description: Second option Yara choice is a Velociraptor shorthand Yara rule
    default:
  - name: YaraRule
    description: Final Yara option and the default if no other options provided.
    default: |
        rule EXPL_Log4j_CVE_2021_44228_Dec21_Soft {
           meta:
              description = "Detects indicators in server logs that indicate an exploitation attempt of CVE-2021-44228"
              author = "Florian Roth"
              reference = "https://twitter.com/h113sdx/status/1469010902183661568?s=20"
              date = "2021-12-10"
              score = 60
           strings:
              $x1 = "${jndi:ldap:/"
              $x2 = "${jndi:rmi:/"
              $x3 = "${jndi:ldaps:/"
              $x4 = "${jndi:dns:/"
           condition:
              1 of them
        }
        
        rule EXPL_Log4j_CVE_2021_44228_Dec21_Hard {
           meta:
              description = "Detects indicators in server logs that indicate the exploitation of CVE-2021-44228"
              author = "Florian Roth"
              reference = "https://twitter.com/h113sdx/status/1469010902183661568?s=20"
              date = "2021-12-10"
              score = 80
           strings:
              $x1 = /\$\{jndi:(ldap|ldaps|rmi|dns):\/[\/]?[a-z-\.0-9]{3,120}:[0-9]{2,5}\/[a-zA-Z\.]{1,32}\}/
              $fp1r = /(ldap|rmi|ldaps|dns):\/[\/]?(127\.0\.0\.1|192\.168\.|172\.[1-3][0-9]\.|10\.)/
           condition:
              $x1 and not 1 of ($fp*)
        }
        
        rule SUSP_Base64_Encoded_Exploit_Indicators_Dec21 {
           meta:
              description = "Detects base64 encoded strings found in payloads of exploits against log4j CVE-2021-44228"
              author = "Florian Roth"
              reference = "https://twitter.com/Reelix/status/1469327487243071493"
              date = "2021-12-10"
              score = 70
           strings:
              /* curl -s  */
              $sa1 = "Y3VybCAtcy"
              $sa2 = "N1cmwgLXMg"
              $sa3 = "jdXJsIC1zI"
              /* |wget -q -O-  */
              $sb1 = "fHdnZXQgLXEgLU8tI"
              $sb2 = "x3Z2V0IC1xIC1PLS"
              $sb3 = "8d2dldCAtcSAtTy0g"
           condition:
              1 of ($sa*) and 1 of ($sb*)
        }

sources:
  - query: |
      -- check which Yara to use
      LET yara = SELECT * FROM if(condition=YaraUrl,
            then= { SELECT Content FROM http_client( url=YaraUrl, method='GET') },
            else= if(condition=ShortHandYara,
                then= { SELECT ShortHandYara as Content FROM scope() },
                else= { SELECT YaraRule as Content FROM scope() }))
                
      -- time testing
      LET time_test(stamp) = 
            if(condition= DateBefore AND DateAfter,
                then= stamp < DateBefore AND stamp > DateAfter,
                else= 
            if(condition=DateBefore,
                then= stamp < DateBefore,
                else= 
            if(condition= DateAfter,
                then= stamp > DateAfter,
                else= True
            )))
      
      -- first find all matching glob
      LET files = SELECT FullPath, Name, Size, Mtime, Atime, Ctime, Btime
        FROM glob(globs=PathGlob,nosymlink='True')
        WHERE 
          NOT IsDir AND NOT IsLink
          AND if(condition=SizeMin,
            then= SizeMin < Size,
            else= True)
          AND if(condition=SizeMax,
            then=SizeMax > Size,
            else= True)
          AND 
             ( time_test(stamp=Mtime)
            OR time_test(stamp=Atime)
            OR time_test(stamp=Ctime)
            OR time_test(stamp=Btime))

      -- scan files and only report a single hit.
      LET hits = SELECT * FROM foreach(row=files,
            query={
                SELECT
                    FileName as FullPath,
                    File.Size AS Size,
                    Mtime, Atime, Ctime, Btime,
                    Rule, Tags, Meta,
                    str(str=String.Data) AS HitContext,
                    String.Offset AS HitOffset
                FROM yara(rules=yara.Content[0],files=FullPath)
                LIMIT 1
            })

      -- upload files that have hit
      LET upload_hits=SELECT *,
            upload(file=FullPath) AS Upload
        FROM hits

      -- return rows
      SELECT * FROM if(condition=UploadHits,
        then=upload_hits,
        else=hits)
