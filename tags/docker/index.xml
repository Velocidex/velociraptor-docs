<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Velociraptor - Digging deeper!</title><link>https://docs.velociraptor.app/tags/docker/</link><description>Recent content in Docker on Velociraptor - Digging deeper!</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://docs.velociraptor.app/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker.Image.Export</title><link>https://docs.velociraptor.app/exchange/artifacts/pages/docker.image.export/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/exchange/artifacts/pages/docker.image.export/</guid><description>&lt;p>Uses the Docker UNIX socket to export a Docker image to a
tempfile and upload to Velociraptor.&lt;/p>
&lt;p>Analysis Tips:&lt;br>
- &lt;a href="https://jellyparks.com/posts/compromised-container-analysis-primer/" target="_blank" >https://jellyparks.com/posts/compromised-container-analysis-primer/&lt;/a>
&lt;/p>
&lt;p>#docker&lt;/p>
&lt;pre>&lt;code class="language-yaml">
name: Docker.Image.Export
author: Brady Semm - @btsemm / DoppioRistretto
description: |
 Uses the Docker UNIX socket to export a Docker image to a
 tempfile and upload to Velociraptor.
 
 Analysis Tips: 
 - https://jellyparks.com/posts/compromised-container-analysis-primer/

 #docker
 
parameters:
 - name: dockerSocket
 description: |
 Docker server socket. You will normally need to be root to connect.
 default: /var/run/docker.sock
 - name: ImageNameOrID
 description: |
 Docker Image name or ID to export. Can include tag (eg. "image:latest")
 default: empty

sources:
 - precondition: |
 SELECT OS From info() where OS = 'darwin' OR OS = 'linux'
 query: |

 LET EncodedImageNameOrID = regex_replace(source=ImageNameOrID, replace_lambda="x=&amp;gt;format(format='%%%02x',args=x)", re="[^a-z0-9\\-_.~?]")
 LET docker_api_path = format(format="%v:unix/images/%v/get", args=[dockerSocket, EncodedImageNameOrID])
 LET response &amp;lt;= SELECT Content FROM http_client(url=docker_api_path, tempfile_extension=".tar", remove_last=true)
 
 SELECT upload(file=response.Content) from scope()

 

&lt;/code>&lt;/pre></description></item></channel></rss>