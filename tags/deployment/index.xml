<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deployment on Velociraptor - Digging deeper!</title><link>https://docs.velociraptor.app/tags/deployment/</link><description>Recent content in Deployment on Velociraptor - Digging deeper!</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 28 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://docs.velociraptor.app/tags/deployment/index.xml" rel="self" type="application/rss+xml"/><item><title>Detecting Velociraptor misuse</title><link>https://docs.velociraptor.app/knowledge_base/tips/velocirator_misuse/</link><pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/velocirator_misuse/</guid><description>&lt;h1 id="detecting-velociraptor-misuse">Detecting Velociraptor misuse&lt;/h1>
&lt;p>Velociraptor is widely used by defenders for legitimate forensic and
response workflows, and, just like many other security and
administrative tools, it can also be abused when in the wrong hands.&lt;/p>
&lt;p>Threat actors use legitimate software to their advantage at various
stages of the attack lifecycle. In the past, we have seen many
legitimate tools that were abused by threat actors (&lt;code>PsExec&lt;/code>,
&lt;code>AnyDesk&lt;/code>, &lt;code>ScreenConnect&lt;/code>, etc.). Threat actors will continue to
abuse legitimate tools to facilitate their attacks.&lt;/p>
&lt;p>Recently, we observed that &lt;a href="https://news.sophos.com/en-us/2025/08/26/velociraptor-incident-response-tool-abused-for-remote-access/" target="_blank" >the Velociraptor tool was one of
them&lt;/a>
.&lt;/p>
&lt;p>In this instance, the threat actor downloaded the Velociraptor binary
and, in its configuration file, specified the command-and-control
server. After Velociraptor was executed on the compromised asset, it
established a communication with the C2 server. Once the communication
was established, the threat actor used Velociraptor to perform further
actions, such as downloading additional files or executing commands on
the compromised asset. While this is not a vulnerability in the tool
itself, it can be used for malicious purposes.&lt;/p>
&lt;p>On October 8th 2025, &lt;code>Cisco Talos&lt;/code> reported observations from a
threat actor abusing Velociraptor version (version 0.73.4.0) to
distribute ransomware.&lt;/p>
&lt;h2 id="how-can-i-detect-velociraptor-misuse-in-my-environment">How can I detect Velociraptor misuse in my environment?&lt;/h2>
&lt;p>In order to help organizations detect Velociraptor misuse,
Velociraptor deliberately creates some IOCs which are easy to detect:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>When Velociraptor starts, the binary registers a new event log
source with the name &lt;code>Velociraptor&lt;/code>. This will create a new key at
the location
&lt;code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog\Application\Velociraptor&lt;/code>.&lt;/p>
&lt;p>Typically the modification time for this key is a good indicator of
the first time the Velociraptor binary was launched on the system.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Each time the binary is launched, the binary logs the command line
arguments used into the &lt;code>Application&lt;/code> event log with an event id of
&lt;code>1000&lt;/code>. For example, when run as a service, the message looks
similar to:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>Velociraptor startup ARGV: [&amp;quot;C:\\Program Files\\Velociraptor\\Velociraptor.exe&amp;quot;,&amp;quot;--config&amp;quot;,&amp;quot;C:\\Program Files\\Velociraptor\\/client.config.yaml&amp;quot;,&amp;quot;service&amp;quot;,&amp;quot;run&amp;quot;]
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>
&lt;p>Of course, since Velociraptor is an open source tool it is possible
for attackers to remove these indicators and rebuild the
program. However, the resulting binary will not be signed by Rapid7
and so will most likely remain an unsigned binary, thereby raising
a further indicator that may be used: Detecting any execution of
unsigned binaries in the environment. The official Rapid7 signed
binary will always leave detectable traces of execution.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Another more robust detection for a potentially malicious rebuilt
Velociraptor binary may use the following Yara rule:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>rule velociraptor_strings {
 meta:
 description = &amp;quot;Detects unique strings in Velociraptor binaries&amp;quot;

 strings:
 $s1 = &amp;quot;www.velocidex.com/golang/velociraptor/&amp;quot; wide ascii
 $s2 = &amp;quot;proto.VelociraptorUser, error&amp;quot; wide ascii
 $s3 = &amp;quot;Welcome to the Velociraptor multi-frontend configuration generator&amp;quot; wide ascii
 $s4 = &amp;quot;Go build ID:&amp;quot; wide ascii

 condition:
 3 of them
}
&lt;/code>&lt;/pre>
&lt;ol start="5">
&lt;li>The following experimental Sigma rule will detect the installation
or running of the Velociraptor binary. This could lead to false
positive alerts when you have installed Velociraptor by default or
running it for an investigation. However it will trigger an alert
when Velociraptor is not supposed to be installed into the network
and can be seen as a potential abuse of the tool.&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>itle: Suspicious Velociraptor Execution or Misuse
id: 12345678-ABCD-1234-ABCD-1234567890AB
description: |
 Detect execution of Velociraptor binary with suspicious arguments or as unsigned binary,
 potentially indicating misuse or attacker-controlled instance.
status: experimental
author: Rapid7 Labs
references:
 - https://docs.velociraptor.app/knowledge_base/tips/velocirator_misuse/
tags:
 - attack.execution
 - attack.persistence
 - tool.abuse
logsource:
 product: windows
 category: process_creation
detection:
 selection_velociraptor:
 Image|endswith: '\Velociraptor.exe'
 selection_suspicious_args:
 CommandLine|contains:
 - &amp;quot;--config&amp;quot;
 - &amp;quot;client.config.yaml&amp;quot;
 - &amp;quot;service run&amp;quot;
 selection_unsigned:
 Signature|endswith:
 - &amp;quot;Unsigned&amp;quot;
 condition: selection_velociraptor and (selection_suspicious_args or selection_unsigned)
falsepositives:
 - Legitimate Velociraptor use by admins / security teams (especially if unsigned binary is used legitimately)
 - Test or dev environments
level: high
&lt;/code>&lt;/pre>
&lt;p>For organizations that are concerned about unauthorized deployments
and already have Velociraptor deployed, Rapid7 has published a
Velociraptor inception artifact that automates the above techniques
and can help detect unexpected instances. This can be viewed here:
&lt;a href="https://github.com/rapid7/Rapid7-Labs/blob/main/Vql/VelociraptorInception.yaml" target="_blank" >https://github.com/rapid7/Rapid7-Labs/blob/main/Vql/VelociraptorInception.yaml&lt;/a>
&lt;/p>
&lt;p>For organizations that do not already have Velociraptor deployed, the
above detections methods can be easily implemented using whatever
technology stack they already have deployed.&lt;/p>
&lt;h2 id="what-if-i-am-already-using-velociraptor">What if I am already using Velociraptor?&lt;/h2>
&lt;p>If Velociraptor use is already expected in your environment, misuse of
Velociraptor may blend in with legitimate use. In this case:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Forward the audit logs centrally and look for unusual sets of
command line arguments (if Velociraptor is usually installed as a
service it will always be started similar to the example above).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check the integrity of the Velociraptor agent configuration to to
ensure that it is not tampered with.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check the process lineage of the Velociraptor binary in your EDR to
ensure it is always started by the service control manager in the
usual way.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>How to set up a local S3 dropbox server?</title><link>https://docs.velociraptor.app/knowledge_base/tips/dropbox_server/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/dropbox_server/</guid><description>&lt;h1 id="how-to-set-up-a-local-s3-dropbox-server">How to set up a local S3 dropbox server?&lt;/h1>
&lt;p>When collecting evidence with the offline collector we often need to
upload large quantities of data. While cloud based uploads are
convenient they are usually slower than uploading to a local LAN and
might result in network bottlenecks as many systems in the local
network are saturating internet uplinks.&lt;/p>
&lt;p>In these cases it is more convenient to set up a local &lt;code>dropbox&lt;/code>
upload server which will collect collections from systems within local
on-premises segments instead.&lt;/p>
&lt;p>There are several options for that:&lt;/p>
&lt;ol>
&lt;li>A &lt;a href="https://docs.velociraptor.app/docs/offline_triage/remote_uploads/#smb-share" >Windows file share&lt;/a>
 can be
created on a Windows system.&lt;/li>
&lt;li>An SFTP server can be &lt;a href="https://docs.velociraptor.app/knowledge_base/tips/setting_up_sftp/" >installed on a local Linux system&lt;/a>
.&lt;/li>
&lt;li>A local S3 server can be installed using
&lt;a href="https://github.com/minio/minio" target="_blank" >MinIO&lt;/a>
 - the subject of this
article.&lt;/li>
&lt;/ol>
&lt;p>A common thread between these options is to ensure that credentials
are only allowed to upload new files and not download these files
again. Since the offline collector must include credentials within the
configuration file, we need to ensure these credentials can not
provide additional access to what is required.&lt;/p>
&lt;p>You can view the offline collector&amp;rsquo;s configuration file using
&lt;code>Collector.exe config show&lt;/code>.&lt;/p>
&lt;h2 id="installing-a-local-minio-server">Installing a local MinIO server&lt;/h2>
&lt;p>This option is very easy to do and works on all mainstream operating
systems as MinIO is a single Go binary available under the AGPL.&lt;/p>
&lt;p>For this example we assume the dropbox server has the IP &lt;code>192.168.1.1&lt;/code>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>First download the MinIO binary from the &lt;a href="https://github.com/minio/minio?tab=readme-ov-file#binary-download" target="_blank" >MinIO GitHub
page&lt;/a>
. For
example, on Linux the binary can be fetched from
&lt;a href="https://dl.min.io/server/minio/release/linux-amd64/minio" target="_blank" >https://dl.min.io/server/minio/release/linux-amd64/minio&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start the server using the following command:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-sh">MINIO_ROOT_USER=admin MINIO_ROOT_PASSWORD=password ./minio server /tmp/minio --console-address &amp;quot;:9001&amp;quot; --address &amp;quot;:4566&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>This will start a server with the admin password provided and store
all files in the &lt;code>/tmp/minio&lt;/code> directory. The web console will be
available on port &lt;code>9001&lt;/code> and the API port will be &lt;code>4566&lt;/code>. You can view the
web console for MinIO by navigating the browser to
&lt;code>http://192.168.1.1:9001&lt;/code>&lt;/p>
&lt;p>Please use a more complex password in reality, for this demonstration
we will use a weak password.&lt;/p>
&lt;ol start="3">
&lt;li>To administrate the MinIO server from the commandline we will use
the &lt;code>mc&lt;/code> command available from
&lt;a href="https://dl.min.io/client/mc/release/" target="_blank" >https://dl.min.io/client/mc/release/&lt;/a>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-sh">wget https://dl.min.io/client/mc/release/linux-amd64/mc
chmod +x ./mc

# Save credentials for the mc tool
./mc alias set 'myminio' 'http://192.168.1.11:4566' 'admin' 'password'

# Create a new bucket called uploads
./mc mv myminio/uploads
&lt;/code>&lt;/pre>
&lt;ol start="4">
&lt;li>Next we need to create a new client key and secret - this a similar
process to what we need to do on the &lt;a href="https://training.velociraptor.app//modules/offline_collection/cloud_upload.html#/8" target="_blank" >AWS S3
console&lt;/a>
,
but using the command line it is quicker&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-sh"># Add a new uploader user with specific access key and secret key
./mc admin user add uploader access_key_123 secret_key_123
&lt;/code>&lt;/pre>
&lt;ol start="5">
&lt;li>Next we need to restrict the policy allowed for this user (the user
is basically identified by the access key). We create a JSON policy
with an editor and store it for example in
&lt;code>/tmp/uploader.policy.json&lt;/code>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-json">{
 &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;,
 &amp;quot;Statement&amp;quot;: [
 {
 &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;,
 &amp;quot;Action&amp;quot;: &amp;quot;s3:PutObject&amp;quot;,
 &amp;quot;Resource&amp;quot;: &amp;quot;arn:aws:s3:::uploads/*&amp;quot;
 }
 ]
}
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-sh"># Create the policy from the JSON file
 ./mc admin policy create myminio uploader /tmp/uploader.policy.json

# Attach the policy to the new user
./mc admin policy attach myminio --user=access_key_123 uploader
&lt;/code>&lt;/pre>
&lt;ol start="6">
&lt;li>Test the bucket and the permissions using the following VQL. Paste
the following code into a file say &lt;code>/tmp/test.vql&lt;/code>&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-vql">SELECT
 upload_s3(accessor=&amp;quot;data&amp;quot;,
 file=&amp;quot;Hello&amp;quot;,
 name=&amp;quot;test.txt&amp;quot;,
 endpoint=&amp;quot;http://192.168.1.11:4566&amp;quot;,
 credentials_key=&amp;quot;access_key_123&amp;quot;,
 credentials_secret=&amp;quot;secret_key_123&amp;quot;,
 bucket=&amp;quot;uploads&amp;quot;)
FROM scope()

LET S3_CREDENTIALS &amp;lt;= dict(endpoint='http://192.168.1.11:4566/',
 credentials_key='access_key_123',
 credentials_secret='secret_key_123',
 no_verify_cert=1)

SELECT *, read_file(filename=OSPath, length=10, accessor='s3') AS Data
FROM glob(globs='/uploads/*', accessor='s3')
&lt;/code>&lt;/pre>
&lt;p>Run this query with Velociraptor:&lt;/p>
&lt;pre>&lt;code class="language-sh">velociraptor-v0.74.4-linux-amd64 -v query -f /tmp/test.vql
&lt;/code>&lt;/pre>
&lt;p>The first query uploads a test file to the bucket, we then try to read
it back out - this should be denied:&lt;/p>
&lt;pre>&lt;code class="language-text">[INFO] 2025-07-05T02:26:32Z upload_S3: Uploading test.txt to uploads
[
 {
 &amp;quot;upload_s3(accessor=\&amp;quot;data\&amp;quot;, file=\&amp;quot;Hello\&amp;quot;, name=\&amp;quot;test.txt\&amp;quot;, endpoint=\&amp;quot;http://192.168.1.11:4566\&amp;quot;, credentials_key=\&amp;quot;access_key_123\&amp;quot;, credentials_secret=\&amp;quot;secret_key_123\&amp;quot;, bucket=\&amp;quot;uploads\&amp;quot;)&amp;quot;: {
 &amp;quot;Path&amp;quot;: &amp;quot;http://192.168.1.11:4566/uploads/test.txt&amp;quot;,
 &amp;quot;Size&amp;quot;: 5
 }
 }
][][INFO] 2025-07-05T02:26:32Z Globber: operation error S3: ListBuckets, https response error StatusCode: 403, RequestID: 184F39DAD67D435B, HostID: f2a388c21e253e519af7cec24c2e281b7821740cf65cb6ff168ac3a3ce38718c, api error AccessDenied: Access Denied. while processing /
&lt;/code>&lt;/pre>
&lt;p>You can verify the file is there using the MinIO Console.&lt;/p>
&lt;ol start="7">
&lt;li>Exporting the files. MinIO uses its internal data to store bucket
data but you can use it to copy files in raw format into another
directory. The &lt;code>--watch&lt;/code> flag will continuously watch the bucket to
export files in real time (omit it for one shot export).&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-sh">./mc mirror --watch myminio/uploads /tmp/backup/
&lt;/code>&lt;/pre>
&lt;h3 id="using-velociraptor-to-remotely-launch-the-offline-collector">Using Velociraptor to remotely launch the offline collector.&lt;/h3>
&lt;p>While the offline collector is a stand alone collector, sometime you
might want to use Velociraptor to distribute and run it. This might be
because directly downloading the data that needs to be collected is
not possible over a slow link. In this use case we want to push the
offline collector to the endpoint and have it upload the bulk data to
the local drop box server.&lt;/p>
&lt;p>To do this it is best to use the &lt;a href="https://docs.velociraptor.app/docs/offline_triage/#the-generic-offline-collector" >Generic Collector&lt;/a>
 because it
is small and the Velociraptor binary is already present on the
endpoint.&lt;/p>
&lt;p>In the following artifact we define the &lt;code>OfflineCollector&lt;/code> tool and
then fetch it from the endpoint and launch the Velociraptor binary
with the correct command line for running a generic collector.&lt;/p>
&lt;pre>&lt;code class="language-yaml">name: RemoteOfflineCollector
tools:
- name: OfflineCollector

required_permissions:
- EXECVE

sources:
- query: |
 LET _Exe &amp;lt;= SELECT Exe FROM info()
 LET Exe &amp;lt;= _Exe[0].Exe

 SELECT * FROM foreach(row={
 SELECT OSPath
 FROM Artifact.Generic.Utils.FetchBinary(
 ToolName=&amp;quot;OfflineCollector&amp;quot;,
 TemporaryOnly=TRUE, IsExecutable=FALSE)
 }, query={
 SELECT * FROM execve(sep=&amp;quot;\n&amp;quot;,
 argv=[Exe, &amp;quot;--&amp;quot;, &amp;quot;--embedded_config&amp;quot;, OSPath])
 })
&lt;/code>&lt;/pre>
&lt;p>When building the generic collector make sure to use the S3
credentials as described above to have it automatically upload the
collections to the local dropbox server.&lt;/p></description></item><item><title>How do I configure check ip for Cloudflare Dynamic DNS?</title><link>https://docs.velociraptor.app/knowledge_base/tips/cloudflare_checkip/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/cloudflare_checkip/</guid><description>&lt;h1 id="how-do-i-configure-check-ip-for-cloudflare-dynamic-dns">How do I configure check ip for Cloudflare Dynamic DNS?&lt;/h1>
&lt;h2 id="problem">Problem&lt;/h2>
&lt;p>When deploying Dynamic DNS using Cloudflare in v0.74.3 I noticed an error and on
investigation found that the default lookup IP Velociraptor used has moved.&lt;/p>
&lt;p>Running frontend in verbose mode:
&lt;code>[ERROR] 2025-06-18T00:13:23Z DynDns: Unable to set dns: Content for A record must be a valid IPv4 address.&lt;/code>&lt;/p>
&lt;p>Manually testing the old lookup URL:&lt;/p>
&lt;pre>&lt;code class="language-text">curl https://domains.google.com/checkip
&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;lt;meta http-equiv=&amp;quot;content-type&amp;quot; content=&amp;quot;text/html;charset=utf-8&amp;quot;&amp;gt;
&amp;lt;TITLE&amp;gt;301 Moved&amp;lt;/TITLE&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;lt;BODY&amp;gt;
&amp;lt;H1&amp;gt;301 Moved&amp;lt;/H1&amp;gt;
The document has moved
&amp;lt;A HREF=&amp;quot;https://domains.google/&amp;quot;&amp;gt;here&amp;lt;/A&amp;gt;.
&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>We can configure the lookup URL manually by adding The
&lt;code>checkip_url: https://wtfismyip.com/text&lt;/code> entry into the server configuration.&lt;/p>
&lt;p>Cloudflare configuration instructions:
&lt;a href="https://docs.velociraptor.app/blog/2024/2024-03-10-release-notes-0.72/#dynamic-dns-providers" target="_blank" >https://docs.velociraptor.app/blog/2024/2024-03-10-release-notes-0.72/#dynamic-dns-providers&lt;/a>
&lt;/p>
&lt;p>In the example below I am configuring a host name: &lt;code>hostname.example.com&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-yaml">dyn_dns:
 type: cloudflare
 api_token: &amp;lt;API_KEY&amp;gt;
 zone_name: example.com
 checkip_url: https://wtfismyip.com/text
&lt;/code>&lt;/pre></description></item><item><title>How do I setup Velociraptor with a CloudFlare Tunnel?</title><link>https://docs.velociraptor.app/knowledge_base/tips/cloudflare_tunnel/</link><pubDate>Mon, 19 May 2025 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/cloudflare_tunnel/</guid><description>&lt;h1 id="how-do-i-setup-velociraptor-with-a-cloudflare-tunnel">How do I setup Velociraptor with a CloudFlare Tunnel?&lt;/h1>
&lt;p>For this tutorial I have built Velociraptor on an Ubuntu 20.04 machine.&lt;/p>
&lt;h2 id="step-1">Step 1&lt;/h2>
&lt;p>Once you have Velociraptor installed, the first thing to do is to Generate a config file:
&lt;code>velociraptor config generate -i&lt;/code>&lt;/p>
&lt;p>











&lt;figure id="2b5413bd10185d5b5836d48aaed19397">
 &lt;div data-featherlight="#2b5413bd10185d5b5836d48aaed19397" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/cloudflare_tunnel/screenshot-12-05-2025-at-18-42-06.png" alt="Generating configuration">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="screenshot-12-05-2025-at-18-42-06.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Generating configuration
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;h2 id="step-2">Step 2&lt;/h2>
&lt;p>Follow the following steps:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Deployment Type&lt;/strong>: Self Signed SSL&lt;/li>
&lt;li>&lt;strong>What OS will the server be deployed on&lt;/strong>: Linux&lt;/li>
&lt;li>&lt;strong>Path to Datastore&lt;/strong>: /var/tmp/velociraptor&lt;/li>
&lt;li>&lt;strong>Path to the logs directory&lt;/strong>: /var/log/velociraptor&lt;/li>
&lt;li>&lt;strong>Internal PKI Certificate&lt;/strong>: 2 Years&lt;/li>
&lt;li>&lt;strong>Do you want to restrict VQL functionality on the server?&lt;/strong>: No&lt;/li>
&lt;li>&lt;strong>Use registry for client writeback?&lt;/strong>: No&lt;/li>
&lt;li>&lt;strong>What is the public DNS name of the Master Frontend&lt;/strong>: domain.com&lt;/li>
&lt;li>&lt;strong>DNS Type&lt;/strong>: None : Configure DNS Manually&lt;/li>
&lt;li>&lt;strong>Would you like to try the new experimental websocket comms?&lt;/strong>: No&lt;/li>
&lt;li>&lt;strong>Enter the frontend port to listen on.&lt;/strong>: 443&lt;/li>
&lt;li>&lt;strong>Enter the port for the GUI to listen on.&lt;/strong>: 443&lt;/li>
&lt;li>&lt;strong>Overwrite File&lt;/strong>: /etc/velociraptor/server.config.yaml&lt;/li>
&lt;/ul>
&lt;h2 id="step-3">Step 3&lt;/h2>
&lt;p>Replace all the localhost IPs to listen on all interfaces (0.0.0.0)
&lt;code>sed -e '/bind_address:/{s/127.0.0.1/0.0.0.0/}' -i /etc/velociraptor/server.config.yaml&lt;/code>&lt;/p>
&lt;h2 id="step-4">Step 4&lt;/h2>
&lt;p>As CloudFlare is handling the certificate you need to disable the self signed certificate in the yaml file
&lt;code>nano /etc/velociraptor/server.config.yaml&lt;/code>&lt;/p>
&lt;p>











&lt;figure id="796550fa9926701ea589071438be7ce3">
 &lt;div data-featherlight="#796550fa9926701ea589071438be7ce3" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/cloudflare_tunnel/SSL.png" alt="Remove the option for using self signed SSL">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="SSL.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Remove the option for using self signed SSL
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;h1 id="step-5">Step 5&lt;/h1>
&lt;p>In the CloudFlare Dashboard make a new public hostname pointing to your internal IP address.
The setting is under Zero Trust &amp;gt; Networks &amp;gt; Tunnels &amp;gt; &lt;em>Your Tunnel Name&lt;/em>&lt;/p>
&lt;p>











&lt;figure id="0ed24bd9acbf658cde5298c4cb11ca5b">
 &lt;div data-featherlight="#0ed24bd9acbf658cde5298c4cb11ca5b" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/cloudflare_tunnel/screenshot-12-05-2025-at-20-15-21.png" alt="Remove TLS Verification from CloudFlare">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="screenshot-12-05-2025-at-20-15-21.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Remove TLS Verification from CloudFlare
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;h1 id="step-6">Step 6&lt;/h1>
&lt;p>Start your Velociraptor
&lt;code>velociraptor -c /etc/velociraptor/server.config.yaml frontend -v&lt;/code>&lt;/p></description></item><item><title>How to set up authentication using Google OAuth SSO</title><link>https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/</link><pubDate>Mon, 28 Apr 2025 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/</guid><description>&lt;h1 id="how-to-set-up-authentication-using-google-oauth-sso">How to set up authentication using Google OAuth SSO&lt;/h1>
&lt;p>This guide walks you through the configuration of Google OAuth SSO as an
authentication provider. This requires a user to authenticate via Google
Workspace using it&amp;rsquo;s associated authentication policy. For example if 2-factor
authentication is required then users will need to satisfy this requirement.&lt;/p>
&lt;p>Once the user authenticates to Google, they are redirected back into the
Velociraptor application with a token that allows the application to request
information about the user (for example, the username or email address).&lt;/p>
&lt;h2 id="before-you-begin">Before You Begin&lt;/h2>
&lt;p>Please note the following requirements:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Your Velociraptor server must have a valid SSL certificate already issued and
configured. This can be a certificate issued by Let&amp;rsquo;s Encrypt or
&lt;a href="https://docs.velociraptor.app/knowledge_base/tips/ssl/" >another public CA&lt;/a>
.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Google restricts OAuth 2.0 applications to using Authorized Domains. According
to Google:&lt;/p>
&lt;blockquote>
&lt;p>To use a domain as an authorized domain for OAuth, it must be a &amp;ldquo;top private
domain&amp;rdquo;, which is the domain component available for registration on a
public suffix, such as the domain before the .com, .net, or .biz, or similar
top-level domains. Subdomains are controlled by the parent domain and are
not considered top private domains.&lt;/p>
&lt;p>For example, if your application home page is
&lt;a href="https://sub.example.com/product" target="_blank" >https://sub.example.com/product&lt;/a>
, you would need to verify ownership of the
example.com domain. This verification is necessary to ensure the security and
trustworthiness of the application.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h3 id="registering-velociraptor-as-an-oauth-application">Registering Velociraptor as an OAuth application&lt;/h3>
&lt;p>Before using Google to authenticate, you need to register your Velociraptor
deployment as an OAuth App with Google. You register Velociraptor as an OAuth
app by accessing the Google cloud console at &lt;a href="https://console.cloud.google.com" target="_blank" >https://console.cloud.google.com&lt;/a>
.
You must set up a cloud account and create a cloud project even if you do not
host your server on Google&amp;rsquo;s Cloud Platform.&lt;/p>
&lt;p>The ultimate goal of this step is to obtain OAuth credentials that will be used
in the Velociraptor configuration, but there are a few things set up first.&lt;/p>
&lt;p>Navigate to &lt;code>APIs and Services&lt;/code> in the GCP console and select &lt;code>Credentials&lt;/code> and
the &lt;code>OAuth Consent Screen&lt;/code> tab.&lt;/p>
&lt;p>











&lt;figure id="9c8e77333d046d43b34218e805542bdc">
 &lt;div data-featherlight="#9c8e77333d046d43b34218e805542bdc" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/sso11.png" alt="Creating application credentials">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="sso11.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Creating application credentials
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>Further down the page you need to provide an authorized domain.&lt;/p>
&lt;p>











&lt;figure id="3825e5676e990c7b3e1b943ffe4f3c54">
 &lt;div data-featherlight="#3825e5676e990c7b3e1b943ffe4f3c54" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/sso12.png" alt="Authorizing domains">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="sso12.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Authorizing domains
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>In order to add an Authorized Domain you need to &lt;em>verify it&lt;/em>. Google&amp;rsquo;s help pages
&lt;a href="https://developers.google.com/identity/protocols/oauth2/production-readiness/brand-verification#authorized-domains" target="_blank" >explain it further&lt;/a>
.&lt;/p>
&lt;p>In this example we assume that you purchased your domain with Google
domains which makes this step easier since it is already verified.&lt;/p>
&lt;p>We can go back to the cloud console and &lt;code>Create Credentials&lt;/code> &amp;gt; &lt;code>OAuth client ID&lt;/code>:&lt;/p>
&lt;p>











&lt;figure id="3dc0bd9997e760aead192b5445751a4a">
 &lt;div data-featherlight="#3dc0bd9997e760aead192b5445751a4a" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/sso15.png" alt="Creating OAuth2 client ID">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="sso15.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Creating OAuth2 client ID
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>Now select &lt;code>Web App&lt;/code> and set the &lt;code>Authorized redirect URIs&lt;/code> to
&lt;code>https://&amp;lt;Your Domain Name&amp;gt;/auth/google/callback&lt;/code> -
This is the URL that successful OAuth authentication will redirect
to. Velociraptor accepts this redirect and uses it to log the user on.&lt;/p>
&lt;p>











&lt;figure id="26350079900961c7e05b20cad0cdffe1">
 &lt;div data-featherlight="#26350079900961c7e05b20cad0cdffe1" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/sso16.png" alt="Specifying the redirect URL">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="sso16.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Specifying the redirect URL
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>If all goes well the Google Cloud Console will give us a client ID and
a client secret.&lt;/p>
&lt;h3 id="generating-configuration">Generating configuration&lt;/h3>
&lt;p>To generate a server config file run the &lt;code>config generate&lt;/code> command to invoke the
configuration wizard:&lt;/p>
&lt;pre>&lt;code class="language-sh">velociraptor config generate -i
&lt;/code>&lt;/pre>
&lt;p>











&lt;figure id="5241444b699d56a56c6a7dd2b2976f92">
 &lt;div data-featherlight="#5241444b699d56a56c6a7dd2b2976f92" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/config1.png" alt="Select SSO deployment type">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="config1.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Select SSO deployment type
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>











&lt;figure id="165b14163109e6db0cd0b727a44b93a9">
 &lt;div data-featherlight="#165b14163109e6db0cd0b727a44b93a9" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/config2.png" alt="Select Google as authentication provider">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="config2.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Select Google as authentication provider
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>











&lt;figure id="0bc3b877ab32da47a205b2b5f8314dc4">
 &lt;div data-featherlight="#0bc3b877ab32da47a205b2b5f8314dc4" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_google_oauth/config3.png" alt="Enter OAuth credentials">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="config3.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Enter OAuth credentials
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>The configuration wizard asks a number of questions and creates a
server configuration file. The first question is &amp;ldquo;Deployment Type&amp;rdquo; and you
should choose the option &lt;strong>Authenticate users with SSO&lt;/strong>.&lt;/p>
&lt;p>In addition to other common configuration questions the
following are relevant to configuring SSO:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>What is the public DNS name of the Master Frontend&lt;/strong>: This should match the
CN field of your valid SSL certificate.&lt;/li>
&lt;li>&lt;strong>Select the SSO Authentication Provider&lt;/strong>: Here you should choose the option &amp;ldquo;Google&amp;rdquo;.&lt;/li>
&lt;li>&lt;strong>Enter the OAuth Client ID&lt;/strong>: the name as specified in Google Cloud Console.&lt;/li>
&lt;li>&lt;strong>Enter the OAuth Client Secret&lt;/strong>: as specified in Google Cloud Console.&lt;/li>
&lt;li>&lt;strong>GUI Username or email address to authorize:&lt;/strong> The initial set of
administrator accounts can be stored in the configuration file. When
Velociraptor starts it will automatically add these accounts as
administrators. When using SSO, Velociraptor does not use any passwords so
only the user names will be requested. While accounts can be specified here it
is optional as they can also be created later, as we&amp;rsquo;ll show below. Entering a
blank value will cause the wizard to move on to the next question.&lt;/li>
&lt;/ul>
&lt;h2 id="grant-access-to-velociraptor">Grant Access to Velociraptor&lt;/h2>
&lt;p>The OAuth flow ensures the user&amp;rsquo;s identity is correct but does not give them
permission to log into Velociraptor. Note that having an OAuth-enabled
application on the web allows anyone with a Google identity to authenticate to
the application but the user is still required to be authorized explicitly. If a
user is rejected, you will see messages similar to the following in the Audit
log:&lt;/p>
&lt;pre>&lt;code class="language-json"> {
 &amp;quot;level&amp;quot;: &amp;quot;error&amp;quot;,
 &amp;quot;method&amp;quot;: &amp;quot;GET&amp;quot;,
 &amp;quot;msg&amp;quot;: &amp;quot;User rejected by GUI&amp;quot;,
 &amp;quot;remote&amp;quot;: &amp;quot;192.168.0.10:40570&amp;quot;,
 &amp;quot;time&amp;quot;: &amp;quot;2018-12-21T18:17:47+10:00&amp;quot;,
 &amp;quot;user&amp;quot;: &amp;quot;mike@velocidex.com&amp;quot;
 }
&lt;/code>&lt;/pre>
&lt;p>In order to authorize the user we must explicitly add them using the
Velociraptor Admin tool:&lt;/p>
&lt;pre>&lt;code class="language-text">$ velociraptor --config ~/server.config.yaml user add mike@velocidex.com
Authentication will occur via Google - therefore no password needs to be set.
&lt;/code>&lt;/pre>
&lt;p>Note that Velociraptor does not ask for a password, since authentication will
occur using Google&amp;rsquo;s SSO.&lt;/p>
&lt;h2 id="authenticate-and-access-the-velociraptor-gui">Authenticate and access the Velociraptor GUI&lt;/h2>
&lt;p>Since you have added users from the command line you will need to restart the
Velociraptor service:&lt;/p>
&lt;pre>&lt;code class="language-sh">sudo systemctl restart velociraptor_server
&lt;/code>&lt;/pre>
&lt;p>Then access the GUI. If your web browser is already logged into Google then the
authentication process should be transparent. If not then you will be directed
to Google to authenticate and you will then be redirected back to the
Velociraptor GUI after successful logon.&lt;/p>
&lt;p>We can see that the logged in user is authenticated by Google, and we
can also see the user&amp;rsquo;s Google avatar at the top right.&lt;/p>
&lt;!-- ![Velociraptor Dashboard](dashboard.png) -->

&lt;div class="mynotices note">
 &lt;div heading="note">&lt;p>Velociraptor will retain its OAuth token for 24 hours. Each day users
will need to re-grant OAuth credentials. Therefore revoking a user
from the Google Admin console may take a full day to take effect. To
remove access sooner you should simply remove all permissions from the
user using &lt;code>velociraptor user grant '{}'&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>

</description></item><item><title>How to setup an SFTP server</title><link>https://docs.velociraptor.app/knowledge_base/tips/setting_up_sftp/</link><pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/setting_up_sftp/</guid><description>&lt;h1 id="how-to-setup-an-sftp-server">How to setup an SFTP server&lt;/h1>
&lt;p>There are many options for receiving uploaded files from the
&lt;a href="https://docs.velociraptor.app/docs/offline_triage/#offline-collections" >offline collector&lt;/a>
,
for example
&lt;a href="https://docs.velociraptor.app/knowledge_base/tips/dropbox_server/" >using S3 buckets&lt;/a>
,
Azure storage services and even the
&lt;a href="https://docs.velociraptor.app/blog/2021/2021-12-11-sftp-in-aws/" >AWS SFTP transfer service&lt;/a>
.&lt;/p>
&lt;p>However sometimes it is simpler to set up your own SFTP server to
receive incoming uploads (it is certainly cheaper than the AWS managed
service).&lt;/p>

&lt;div class="mynotices warning">
 &lt;div heading="warning">&lt;p>Setting up SSH and SFTP can be tricky for novice Linux users. It is easy to
misconfigure things in ways that can leave a server open to exploitation.&lt;/p>
&lt;p>Unless you have a strong reason to prefer using SFTP we recommend you consider
less arcane alternative options such as the one described in
&lt;a href="https://docs.velociraptor.app/knowledge_base/tips/dropbox_server/" >How to set up a local S3 dropbox server&lt;/a>

using MinIO.&lt;/p>
&lt;/div>
&lt;/div>


&lt;p>This tip explains how to set up a server securely.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Create a new Linux based VM and open port 22 for incoming
requests. This can be in the cloud or on prem.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create an &lt;code>sftpupload&lt;/code> user&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>sudo adduser sftpupload
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>Create a directory for files to be uploaded and set the directory
to be writable by the user.&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>mkdir -p /var/sftp/files
chown root:root /var/sftp/files

# Allow anyone to write there
chmod o+wx /var/sftp/files

# No directory listing possible
chmod o-r /var/sftp/files
&lt;/code>&lt;/pre>
&lt;ol start="4">
&lt;li>Add the following in the file &lt;code>/etc/ssh/sshd_config&lt;/code>:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-text">PasswordAuthentication no

Match User sftpupload
 ForceCommand internal-sftp
 PasswordAuthentication no
 ChrootDirectory /var/sftp
 PermitTunnel no
 AllowAgentForwarding no
 AllowTcpForwarding no
 X11Forwarding no
&lt;/code>&lt;/pre>
&lt;p>and then restart the &lt;code>sshd&lt;/code> service:&lt;/p>
&lt;pre>&lt;code class="language-sh">$ sudo systemctl restarts sshd
&lt;/code>&lt;/pre>
&lt;ol start="5">
&lt;li>Create keys for the &lt;code>sftpupload&lt;/code> user&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-sh">sudo -u sftpupload bash
$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/sftpuser/.ssh/id_rsa)

# Authorize the user's public key for access
$ cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys

# Make sure that secure permissions are applied for the directory
$ chmod -v 600 /home/sftpupload/.ssh/
&lt;/code>&lt;/pre>
&lt;ol start="6">
&lt;li>Verify you can connect to the server and upload files. Listing files will be
denied.&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-sh">$ sftp localhost

sftp&amp;gt; put /etc/passwd /files/passwd.txt
Uploading /etc/passwd to /files/passwd.txt

sftp&amp;gt; ls -l files
remote readdir(&amp;quot;/files/&amp;quot;): Permission denied
&lt;/code>&lt;/pre>
&lt;p>As you can see the &lt;code>sftpupload&lt;/code> user does not have permission to read
the directory but can upload files to it.&lt;/p>
&lt;p>If we try shell access via SSH it will correctly be denied:&lt;/p>
&lt;pre>&lt;code class="language-sh">$ ssh localhost
This service allows sftp connections only.
Connection to localhost closed.
&lt;/code>&lt;/pre>
&lt;h3 id="offline-collector-configuration">Offline Collector configuration&lt;/h3>
&lt;p>In the offline collector configuration you should use the private key
(&lt;code>/home/sftpupload/.ssh/id_rsa&lt;/code>) of the form:&lt;/p>
&lt;pre>&lt;code class="language-text">-----BEGIN OPENSSH PRIVATE KEY-----
.....
-----END OPENSSH PRIVATE KEY-----
&lt;/code>&lt;/pre>
&lt;p>and for the Endpoint value, specify it in the form &lt;code>&amp;lt;hostname or IP&amp;gt;:&amp;lt;ssh port&amp;gt;&lt;/code>.&lt;/p></description></item><item><title>How to set up OIDC authentication using Keycloak</title><link>https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/</link><pubDate>Sat, 28 Dec 2024 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/</guid><description>&lt;h1 id="how-to-set-up-oidc-authentication-using-keycloak">How to set up OIDC authentication using Keycloak&lt;/h1>
&lt;p>This guide walks you through the configuration of
&lt;a href="https://www.keycloak.org/" target="_blank" >Keycloak&lt;/a>
 as an OIDC authentication provider for
Velociraptor.&lt;/p>
&lt;p>Keycloak, as a self-hosted, free, and open source solution, may be an attractive
choice for Velociraptor deployments where using cloud-based and/or commercial
providers is not practical or possible. Most of the steps shown here would be
the same or similar for other self-hosted OIDC solutions (for example Zitadel or
Authentik), so it may be useful even if you are not using Keycloak.&lt;/p>

&lt;div class="mynotices warning">
 &lt;div heading=" Production deployment of Keycloak ">&lt;p>Keycloak is a Java application which can be installed manually or deployed via
several officially documented container-based methods. This guide partly mirrors Keycloak&amp;rsquo;s
&lt;a href="https://www.keycloak.org/getting-started/getting-started-docker" target="_blank" >Getting started guide&lt;/a>

which uses Docker to create a &lt;em>&amp;ldquo;development mode&amp;rdquo; instance&lt;/em> of Keycloak. This
method starts a working Keycloak instance but does not create a persistent
database or a production-ready secured server, since the goal here is only to
demonstrate the integration with Velociraptor.&lt;/p>
&lt;p>For production-ready deployment guidance we refer you to
&lt;a href="https://www.keycloak.org/server/configuration-production" target="_blank" >Configuring Keycloak for production&lt;/a>

and the official &lt;a href="https://www.keycloak.org/documentation" target="_blank" >Keycloak documentation&lt;/a>
.&lt;/p>
&lt;/div>
&lt;/div>


&lt;p>As mentioned above, the goal of this guide is to demonstrate a working SSO
configuration for Velociraptor using Keycloak. The basic steps and configuration
will be very similar or even identical for production deployments however some
of the steps shown here are deliberately over-simplified for reasons of brevity
and therefore do not reflect security best practices. Also Keycloak has a vast
array of options and capabilities, which we recommend you explore later, but the
intention here is to get up and running with a basic working integration since
it is better to start simple and be sure that it&amp;rsquo;s working as expected before
possibly adding complexity to it.&lt;/p>
&lt;p>In this simplified setup we have two hosts, with DNS names &lt;code>keycloak.local&lt;/code> and
&lt;code>velociraptor.local&lt;/code>. Substitute your DNS names where applicable. The two hosts
don&amp;rsquo;t need to be on the same network but the Velociraptor host needs to be able
to DNS-resolve the name of the Keycloak server and reach it on port 443. It&amp;rsquo;s
not necessary that the Keycloak server be able to resolve the Velociraptor
server&amp;rsquo;s DNS name but your server probably already has a DNS name already so
that clients can connect to it.&lt;/p>
&lt;p>








 
 

&lt;figure id="d1d61019841b4ed3a43cafc19e745e56">
 &lt;div data-featherlight="#d1d61019841b4ed3a43cafc19e745e56" class="figure">
 &lt;svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 658.5 380" width="658.5" height="380">
 &lt;!-- svg-source:excalidraw -->
 
 &lt;defs>
 
 
 &lt;/defs>
 &lt;g transform="translate(448.5 77.5) rotate(0 90 12.5)">&lt;text x="90" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="middle" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">velociraptor.local&lt;/text>&lt;/g>&lt;g stroke-linecap="round" transform="translate(428.5 50) rotate(0 110 40)">&lt;path d="M20 0 C88.57 -0.88, 160.01 -1.61, 200 0 M20 0 C58.54 -1.53, 98.43 -0.46, 200 0 M200 0 C211.69 1.33, 220.42 6.57, 220 20 M200 0 C211.6 0.43, 217.78 6.44, 220 20 M220 20 C220.28 32.33, 220.74 47.02, 220 60 M220 20 C220.42 29.27, 219.9 37.09, 220 60 M220 60 C219.25 73.02, 212.98 81.3, 200 80 M220 60 C219.38 74.64, 213.91 78.45, 200 80 M200 80 C158.64 82.64, 111.86 82.36, 20 80 M200 80 C129.17 77.64, 58.47 78.32, 20 80 M20 80 C7.8 79.81, -1.25 74.46, 0 60 M20 80 C4.42 78.88, 2.09 75.29, 0 60 M0 60 C-2.04 51.46, 0.64 37.8, 0 20 M0 60 C-0.59 44.56, 0.99 28.68, 0 20 M0 20 C-1.89 6, 5.69 0.76, 20 0 M0 20 C0.34 5.1, 7.14 -2.09, 20 0" stroke="#1e1e1e" stroke-width="2" fill="none">&lt;/path>&lt;/g>&lt;g transform="translate(18.5 77.5) rotate(0 101.5 12.5)">&lt;text x="101.49999999999999" y="17.619999999999997" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="20px" fill="#1e1e1e" text-anchor="middle" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">keycloak.local&lt;/text>&lt;/g>&lt;g stroke-linecap="round" transform="translate(10 50) rotate(0 110 40)">&lt;path d="M20 0 C76.96 -0.66, 132.14 -0.78, 200 0 M20 0 C62.04 0.37, 104.12 0.24, 200 0 M200 0 C213.23 1.37, 220.57 6.48, 220 20 M200 0 C213.56 2, 221.3 6.97, 220 20 M220 20 C221.55 28.63, 219.47 39.69, 220 60 M220 20 C219.3 31.71, 219.58 43.2, 220 60 M220 60 C219.26 74.79, 212.38 80.88, 200 80 M220 60 C218.17 75.49, 215.12 79.31, 200 80 M200 80 C131.97 80.13, 62.31 80.12, 20 80 M200 80 C130.24 82.46, 58.61 81.1, 20 80 M20 80 C6.8 81, -0.91 73.89, 0 60 M20 80 C6.95 81.88, 0.47 74.89, 0 60 M0 60 C-1.01 48.08, -1 40.08, 0 20 M0 60 C0.26 44.86, -0.6 30.27, 0 20 M0 20 C-1.4 7.51, 7.67 -0.6, 20 0 M0 20 C2.15 5.2, 5.79 0.48, 20 0" stroke="#1e1e1e" stroke-width="2" fill="none">&lt;/path>&lt;/g>&lt;g stroke-linecap="round">&lt;g transform="translate(241.01502374283154 88.96543240222326) rotate(0 84.74741701882738 -0.9890726441210518)">&lt;path d="M-0.5 -0.03 C14.43 -0.16, 60.79 -1.83, 89.32 -1.98 C117.86 -2.12, 157.5 -1.02, 170.69 -0.9" stroke="#1e1e1e" stroke-width="2.5" fill="none" stroke-dasharray="8 10">&lt;/path>&lt;/g>&lt;g transform="translate(241.01502374283154 88.96543240222326) rotate(0 84.74741701882738 -0.9890726441210518)">&lt;path d="M22.77 -9.15 C17.92 -6.07, 8.15 -2.18, -0.5 -0.03" stroke="#1e1e1e" stroke-width="2.5" fill="none">&lt;/path>&lt;/g>&lt;g transform="translate(241.01502374283154 88.96543240222326) rotate(0 84.74741701882738 -0.9890726441210518)">&lt;path d="M23.19 7.95 C18.25 6.28, 8.36 5.41, -0.5 -0.03" stroke="#1e1e1e" stroke-width="2.5" fill="none">&lt;/path>&lt;/g>&lt;/g>&lt;mask>&lt;/mask>&lt;g stroke-linecap="round">&lt;g transform="translate(435.5 228) rotate(0 23 -40)">&lt;path d="M0.74 0.88 C4.55 -5.76, 15.38 -25.94, 22.89 -39.54 C30.41 -53.13, 41.87 -74.05, 45.84 -80.67 M-0.33 0.3 C3.31 -6.22, 14.34 -24.95, 21.89 -38.28 C29.45 -51.61, 40.75 -72.51, 44.99 -79.7" stroke="#1e1e1e" stroke-width="2" fill="none">&lt;/path>&lt;/g>&lt;g transform="translate(435.5 228) rotate(0 23 -40)">&lt;path d="M41.11 -56.52 C43.68 -63.72, 42.49 -70.81, 44.99 -79.7 M41.11 -56.52 C41.65 -62.21, 43.78 -68.79, 44.99 -79.7" stroke="#1e1e1e" stroke-width="2" fill="none">&lt;/path>&lt;/g>&lt;g transform="translate(435.5 228) rotate(0 23 -40)">&lt;path d="M27.11 -64.44 C33.94 -69.33, 36.97 -74.03, 44.99 -79.7 M27.11 -64.44 C31.13 -68.28, 36.67 -72.93, 44.99 -79.7" stroke="#1e1e1e" stroke-width="2" fill="none">&lt;/path>&lt;/g>&lt;/g>&lt;mask>&lt;/mask>&lt;g transform="translate(50 10) rotate(0 70 10)">&lt;text x="70" y="14.096" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="16px" fill="#1e1e1e" text-anchor="middle" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">OIDC Provider&lt;/text>&lt;/g>&lt;g transform="translate(468.5 10) rotate(0 70 10)">&lt;text x="70" y="14.096" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="16px" fill="#1e1e1e" text-anchor="middle" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">OIDC Client&lt;/text>&lt;/g>&lt;g stroke-linecap="round" transform="translate(345.6143342216468 250) rotate(0 63.941917866069446 38.268516949888806)">&lt;path d="M0 0 C50.92 -1.01, 99.18 0.86, 127.88 0 M0 0 C27.22 -0.35, 52.93 -1.09, 127.88 0 M127.88 0 C129 14.97, 127.16 33.27, 127.88 76.54 M127.88 0 C128.45 25.83, 128.67 51.78, 127.88 76.54 M127.88 76.54 C79.19 75.12, 34.34 75.28, 0 76.54 M127.88 76.54 C80.11 76.62, 32.38 76.24, 0 76.54 M0 76.54 C-0.1 48.8, -0.34 17.81, 0 0 M0 76.54 C1.01 56.33, 1.2 35.69, 0 0" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;g stroke-linecap="round">&lt;g transform="translate(344.5387364707516 260.71653439224417) rotate(0 64.42096614922218 0)">&lt;path d="M-1.04 -0.51 C20.56 -0.79, 107.14 -1.3, 128.92 -1.13 M0.62 -1.82 C22.13 -2.04, 106.57 -0.22, 128.02 -0.19" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;/g>&lt;mask>&lt;/mask>&lt;g stroke-linecap="round" transform="translate(350.1023696906017 254.27156980000882) rotate(0 2.5009765625 2.5009765625)">&lt;path d="M5 2.5 C5 2.65, 4.99 2.79, 4.96 2.94 C4.94 3.08, 4.9 3.22, 4.85 3.36 C4.8 3.49, 4.74 3.63, 4.67 3.75 C4.59 3.88, 4.51 4, 4.42 4.11 C4.32 4.22, 4.22 4.32, 4.11 4.42 C4 4.51, 3.88 4.59, 3.75 4.67 C3.63 4.74, 3.49 4.8, 3.36 4.85 C3.22 4.9, 3.08 4.94, 2.94 4.96 C2.79 4.99, 2.65 5, 2.5 5 C2.36 5, 2.21 4.99, 2.07 4.96 C1.92 4.94, 1.78 4.9, 1.65 4.85 C1.51 4.8, 1.38 4.74, 1.25 4.67 C1.13 4.59, 1 4.51, 0.89 4.42 C0.78 4.32, 0.68 4.22, 0.59 4.11 C0.49 4, 0.41 3.88, 0.34 3.75 C0.26 3.63, 0.2 3.49, 0.15 3.36 C0.1 3.22, 0.06 3.08, 0.04 2.94 C0.01 2.79, 0 2.65, 0 2.5 C0 2.36, 0.01 2.21, 0.04 2.07 C0.06 1.92, 0.1 1.78, 0.15 1.65 C0.2 1.51, 0.26 1.38, 0.34 1.25 C0.41 1.13, 0.49 1, 0.59 0.89 C0.68 0.78, 0.78 0.68, 0.89 0.59 C1 0.49, 1.13 0.41, 1.25 0.34 C1.38 0.26, 1.51 0.2, 1.65 0.15 C1.78 0.1, 1.92 0.06, 2.07 0.04 C2.21 0.01, 2.36 0, 2.5 0 C2.65 0, 2.79 0.01, 2.94 0.04 C3.08 0.06, 3.22 0.1, 3.36 0.15 C3.49 0.2, 3.63 0.26, 3.75 0.34 C3.88 0.41, 4 0.49, 4.11 0.59 C4.22 0.68, 4.32 0.78, 4.42 0.89 C4.51 1, 4.59 1.13, 4.67 1.25 C4.74 1.38, 4.8 1.51, 4.85 1.65 C4.9 1.78, 4.94 1.92, 4.96 2.07 C4.99 2.21, 5 2.43, 5 2.5 C5.01 2.57, 5.01 2.43, 5 2.5" stroke="none" stroke-width="0" fill="#fa5252">&lt;/path>&lt;path d="M5 2.5 C5 2.65, 4.99 2.79, 4.96 2.94 C4.94 3.08, 4.9 3.22, 4.85 3.36 C4.8 3.49, 4.74 3.63, 4.67 3.75 C4.59 3.88, 4.51 4, 4.42 4.11 C4.32 4.22, 4.22 4.32, 4.11 4.42 C4 4.51, 3.88 4.59, 3.75 4.67 C3.63 4.74, 3.49 4.8, 3.36 4.85 C3.22 4.9, 3.08 4.94, 2.94 4.96 C2.79 4.99, 2.65 5, 2.5 5 C2.36 5, 2.21 4.99, 2.07 4.96 C1.92 4.94, 1.78 4.9, 1.65 4.85 C1.51 4.8, 1.38 4.74, 1.25 4.67 C1.13 4.59, 1 4.51, 0.89 4.42 C0.78 4.32, 0.68 4.22, 0.59 4.11 C0.49 4, 0.41 3.88, 0.34 3.75 C0.26 3.63, 0.2 3.49, 0.15 3.36 C0.1 3.22, 0.06 3.08, 0.04 2.94 C0.01 2.79, 0 2.65, 0 2.5 C0 2.36, 0.01 2.21, 0.04 2.07 C0.06 1.92, 0.1 1.78, 0.15 1.65 C0.2 1.51, 0.26 1.38, 0.34 1.25 C0.41 1.13, 0.49 1, 0.59 0.89 C0.68 0.78, 0.78 0.68, 0.89 0.59 C1 0.49, 1.13 0.41, 1.25 0.34 C1.38 0.26, 1.51 0.2, 1.65 0.15 C1.78 0.1, 1.92 0.06, 2.07 0.04 C2.21 0.01, 2.36 0, 2.5 0 C2.65 0, 2.79 0.01, 2.94 0.04 C3.08 0.06, 3.22 0.1, 3.36 0.15 C3.49 0.2, 3.63 0.26, 3.75 0.34 C3.88 0.41, 4 0.49, 4.11 0.59 C4.22 0.68, 4.32 0.78, 4.42 0.89 C4.51 1, 4.59 1.13, 4.67 1.25 C4.74 1.38, 4.8 1.51, 4.85 1.65 C4.9 1.78, 4.94 1.92, 4.96 2.07 C4.99 2.21, 5 2.43, 5 2.5 C5.01 2.57, 5.01 2.43, 5 2.5" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;g stroke-linecap="round" transform="translate(360.3650650031017 254.27156980000882) rotate(0 2.5009765625 2.5009765625)">&lt;path d="M5 2.5 C5 2.65, 4.99 2.79, 4.96 2.94 C4.94 3.08, 4.9 3.22, 4.85 3.36 C4.8 3.49, 4.74 3.63, 4.67 3.75 C4.59 3.88, 4.51 4, 4.42 4.11 C4.32 4.22, 4.22 4.32, 4.11 4.42 C4 4.51, 3.88 4.59, 3.75 4.67 C3.63 4.74, 3.49 4.8, 3.36 4.85 C3.22 4.9, 3.08 4.94, 2.94 4.96 C2.79 4.99, 2.65 5, 2.5 5 C2.36 5, 2.21 4.99, 2.07 4.96 C1.92 4.94, 1.78 4.9, 1.65 4.85 C1.51 4.8, 1.38 4.74, 1.25 4.67 C1.13 4.59, 1 4.51, 0.89 4.42 C0.78 4.32, 0.68 4.22, 0.59 4.11 C0.49 4, 0.41 3.88, 0.34 3.75 C0.26 3.63, 0.2 3.49, 0.15 3.36 C0.1 3.22, 0.06 3.08, 0.04 2.94 C0.01 2.79, 0 2.65, 0 2.5 C0 2.36, 0.01 2.21, 0.04 2.07 C0.06 1.92, 0.1 1.78, 0.15 1.65 C0.2 1.51, 0.26 1.38, 0.34 1.25 C0.41 1.13, 0.49 1, 0.59 0.89 C0.68 0.78, 0.78 0.68, 0.89 0.59 C1 0.49, 1.13 0.41, 1.25 0.34 C1.38 0.26, 1.51 0.2, 1.65 0.15 C1.78 0.1, 1.92 0.06, 2.07 0.04 C2.21 0.01, 2.36 0, 2.5 0 C2.65 0, 2.79 0.01, 2.94 0.04 C3.08 0.06, 3.22 0.1, 3.36 0.15 C3.49 0.2, 3.63 0.26, 3.75 0.34 C3.88 0.41, 4 0.49, 4.11 0.59 C4.22 0.68, 4.32 0.78, 4.42 0.89 C4.51 1, 4.59 1.13, 4.67 1.25 C4.74 1.38, 4.8 1.51, 4.85 1.65 C4.9 1.78, 4.94 1.92, 4.96 2.07 C4.99 2.21, 5 2.43, 5 2.5 C5.01 2.57, 5.01 2.43, 5 2.5" stroke="none" stroke-width="0" fill="#fab005">&lt;/path>&lt;path d="M5 2.5 C5 2.65, 4.99 2.79, 4.96 2.94 C4.94 3.08, 4.9 3.22, 4.85 3.36 C4.8 3.49, 4.74 3.63, 4.67 3.75 C4.59 3.88, 4.51 4, 4.42 4.11 C4.32 4.22, 4.22 4.32, 4.11 4.42 C4 4.51, 3.88 4.59, 3.75 4.67 C3.63 4.74, 3.49 4.8, 3.36 4.85 C3.22 4.9, 3.08 4.94, 2.94 4.96 C2.79 4.99, 2.65 5, 2.5 5 C2.36 5, 2.21 4.99, 2.07 4.96 C1.92 4.94, 1.78 4.9, 1.65 4.85 C1.51 4.8, 1.38 4.74, 1.25 4.67 C1.13 4.59, 1 4.51, 0.89 4.42 C0.78 4.32, 0.68 4.22, 0.59 4.11 C0.49 4, 0.41 3.88, 0.34 3.75 C0.26 3.63, 0.2 3.49, 0.15 3.36 C0.1 3.22, 0.06 3.08, 0.04 2.94 C0.01 2.79, 0 2.65, 0 2.5 C0 2.36, 0.01 2.21, 0.04 2.07 C0.06 1.92, 0.1 1.78, 0.15 1.65 C0.2 1.51, 0.26 1.38, 0.34 1.25 C0.41 1.13, 0.49 1, 0.59 0.89 C0.68 0.78, 0.78 0.68, 0.89 0.59 C1 0.49, 1.13 0.41, 1.25 0.34 C1.38 0.26, 1.51 0.2, 1.65 0.15 C1.78 0.1, 1.92 0.06, 2.07 0.04 C2.21 0.01, 2.36 0, 2.5 0 C2.65 0, 2.79 0.01, 2.94 0.04 C3.08 0.06, 3.22 0.1, 3.36 0.15 C3.49 0.2, 3.63 0.26, 3.75 0.34 C3.88 0.41, 4 0.49, 4.11 0.59 C4.22 0.68, 4.32 0.78, 4.42 0.89 C4.51 1, 4.59 1.13, 4.67 1.25 C4.74 1.38, 4.8 1.51, 4.85 1.65 C4.9 1.78, 4.94 1.92, 4.96 2.07 C4.99 2.21, 5 2.43, 5 2.5 C5.01 2.57, 5.01 2.43, 5 2.5" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;g stroke-linecap="round" transform="translate(371.07848146944787 254.722290953855) rotate(0 2.5009765625 2.5009765625)">&lt;path d="M5 2.5 C5 2.65, 4.99 2.79, 4.96 2.94 C4.94 3.08, 4.9 3.22, 4.85 3.36 C4.8 3.49, 4.74 3.63, 4.67 3.75 C4.59 3.88, 4.51 4, 4.42 4.11 C4.32 4.22, 4.22 4.32, 4.11 4.42 C4 4.51, 3.88 4.59, 3.75 4.67 C3.63 4.74, 3.49 4.8, 3.36 4.85 C3.22 4.9, 3.08 4.94, 2.94 4.96 C2.79 4.99, 2.65 5, 2.5 5 C2.36 5, 2.21 4.99, 2.07 4.96 C1.92 4.94, 1.78 4.9, 1.65 4.85 C1.51 4.8, 1.38 4.74, 1.25 4.67 C1.13 4.59, 1 4.51, 0.89 4.42 C0.78 4.32, 0.68 4.22, 0.59 4.11 C0.49 4, 0.41 3.88, 0.34 3.75 C0.26 3.63, 0.2 3.49, 0.15 3.36 C0.1 3.22, 0.06 3.08, 0.04 2.94 C0.01 2.79, 0 2.65, 0 2.5 C0 2.36, 0.01 2.21, 0.04 2.07 C0.06 1.92, 0.1 1.78, 0.15 1.65 C0.2 1.51, 0.26 1.38, 0.34 1.25 C0.41 1.13, 0.49 1, 0.59 0.89 C0.68 0.78, 0.78 0.68, 0.89 0.59 C1 0.49, 1.13 0.41, 1.25 0.34 C1.38 0.26, 1.51 0.2, 1.65 0.15 C1.78 0.1, 1.92 0.06, 2.07 0.04 C2.21 0.01, 2.36 0, 2.5 0 C2.65 0, 2.79 0.01, 2.94 0.04 C3.08 0.06, 3.22 0.1, 3.36 0.15 C3.49 0.2, 3.63 0.26, 3.75 0.34 C3.88 0.41, 4 0.49, 4.11 0.59 C4.22 0.68, 4.32 0.78, 4.42 0.89 C4.51 1, 4.59 1.13, 4.67 1.25 C4.74 1.38, 4.8 1.51, 4.85 1.65 C4.9 1.78, 4.94 1.92, 4.96 2.07 C4.99 2.21, 5 2.43, 5 2.5 C5.01 2.57, 5.01 2.43, 5 2.5" stroke="none" stroke-width="0" fill="#40c057">&lt;/path>&lt;path d="M5 2.5 C5 2.65, 4.99 2.79, 4.96 2.94 C4.94 3.08, 4.9 3.22, 4.85 3.36 C4.8 3.49, 4.74 3.63, 4.67 3.75 C4.59 3.88, 4.51 4, 4.42 4.11 C4.32 4.22, 4.22 4.32, 4.11 4.42 C4 4.51, 3.88 4.59, 3.75 4.67 C3.63 4.74, 3.49 4.8, 3.36 4.85 C3.22 4.9, 3.08 4.94, 2.94 4.96 C2.79 4.99, 2.65 5, 2.5 5 C2.36 5, 2.21 4.99, 2.07 4.96 C1.92 4.94, 1.78 4.9, 1.65 4.85 C1.51 4.8, 1.38 4.74, 1.25 4.67 C1.13 4.59, 1 4.51, 0.89 4.42 C0.78 4.32, 0.68 4.22, 0.59 4.11 C0.49 4, 0.41 3.88, 0.34 3.75 C0.26 3.63, 0.2 3.49, 0.15 3.36 C0.1 3.22, 0.06 3.08, 0.04 2.94 C0.01 2.79, 0 2.65, 0 2.5 C0 2.36, 0.01 2.21, 0.04 2.07 C0.06 1.92, 0.1 1.78, 0.15 1.65 C0.2 1.51, 0.26 1.38, 0.34 1.25 C0.41 1.13, 0.49 1, 0.59 0.89 C0.68 0.78, 0.78 0.68, 0.89 0.59 C1 0.49, 1.13 0.41, 1.25 0.34 C1.38 0.26, 1.51 0.2, 1.65 0.15 C1.78 0.1, 1.92 0.06, 2.07 0.04 C2.21 0.01, 2.36 0, 2.5 0 C2.65 0, 2.79 0.01, 2.94 0.04 C3.08 0.06, 3.22 0.1, 3.36 0.15 C3.49 0.2, 3.63 0.26, 3.75 0.34 C3.88 0.41, 4 0.49, 4.11 0.59 C4.22 0.68, 4.32 0.78, 4.42 0.89 C4.51 1, 4.59 1.13, 4.67 1.25 C4.74 1.38, 4.8 1.51, 4.85 1.65 C4.9 1.78, 4.94 1.92, 4.96 2.07 C4.99 2.21, 5 2.43, 5 2.5 C5.01 2.57, 5.01 2.43, 5 2.5" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;g stroke-opacity="0.9" fill-opacity="0.9" stroke-linecap="round" transform="translate(387.1055424590751 270.77465983187085) rotate(0 21.360101269687846 21.360101269687846)">&lt;path d="M19.16 -0.23 C23.44 -1.03, 29.62 0.75, 33.42 3.45 C37.22 6.15, 40.81 11.46, 41.97 15.96 C43.12 20.46, 42.3 26.41, 40.34 30.46 C38.38 34.51, 34.21 38.33, 30.22 40.28 C26.22 42.23, 20.72 43.18, 16.4 42.14 C12.07 41.1, 7.03 37.79, 4.27 34.02 C1.5 30.24, -0.42 24.07, -0.18 19.48 C0.07 14.89, 2.27 9.7, 5.73 6.48 C9.19 3.26, 18.05 1.14, 20.59 0.19 C23.14 -0.76, 20.98 0.42, 21 0.77 M19.72 -0.31 C24.02 -0.97, 29.26 1.6, 32.88 4.19 C36.51 6.79, 40.03 10.88, 41.46 15.27 C42.89 19.66, 43.3 26.36, 41.48 30.54 C39.66 34.72, 34.8 38.49, 30.53 40.35 C26.26 42.21, 20.16 42.74, 15.87 41.72 C11.57 40.7, 7.29 38, 4.74 34.24 C2.2 30.48, 0.31 23.84, 0.57 19.18 C0.84 14.51, 3.35 9.39, 6.33 6.27 C9.32 3.14, 16.43 1.51, 18.5 0.43 C20.58 -0.65, 18.55 -0.61, 18.81 -0.19" stroke="none" stroke-width="0" fill="#04aaf7">&lt;/path>&lt;path d="M17.44 -0.08 C21.61 -1.26, 27.42 0.16, 31.42 2.48 C35.43 4.79, 39.73 9.51, 41.48 13.82 C43.22 18.13, 43.42 24, 41.89 28.34 C40.35 32.67, 36.27 37.43, 32.26 39.84 C28.25 42.26, 22.34 43.56, 17.8 42.83 C13.26 42.11, 8.01 39.07, 5 35.51 C1.99 31.94, -0.29 26.09, -0.27 21.45 C-0.25 16.81, 2.04 11.15, 5.1 7.65 C8.17 4.15, 15.94 1.62, 18.14 0.45 C20.34 -0.73, 18.29 0.28, 18.32 0.6 M21.61 -0.1 C25.95 -0.4, 32.14 1.83, 35.6 4.73 C39.06 7.63, 41.69 12.88, 42.36 17.32 C43.03 21.77, 41.79 27.33, 39.61 31.41 C37.43 35.5, 33.43 40.08, 29.3 41.85 C25.17 43.63, 19.18 43.76, 14.83 42.07 C10.49 40.38, 5.76 35.65, 3.25 31.7 C0.75 27.76, -0.83 22.88, -0.18 18.42 C0.47 13.95, 3.63 8.05, 7.15 4.91 C10.67 1.77, 18.65 0.43, 20.94 -0.42 C23.23 -1.27, 20.94 -0.71, 20.88 -0.19" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;g stroke-linecap="round">&lt;g transform="translate(414.1837065210507 286.9990118963285) rotate(0 -3.3114080732229922 5.9489359900645695)" fill-rule="evenodd">&lt;path d="M0 0 C-0.31 -0.07, -0.57 0.63, -1.83 -0.41 C-3.09 -1.46, -5.98 -5.62, -7.57 -6.27 C-9.16 -6.93, -10.52 -5.79, -11.36 -4.35 C-12.2 -2.91, -12.63 0.53, -12.61 2.37 C-12.6 4.22, -10.47 5.65, -11.27 6.74 C-12.07 7.83, -16.44 7.74, -17.42 8.89 C-18.41 10.04, -18.04 12.9, -17.2 13.64 C-16.36 14.39, -13.8 14.04, -12.38 13.35 C-10.96 12.66, -10.16 8.72, -8.7 9.48 C-7.24 10.23, -5 16.42, -3.62 17.87 C-2.24 19.32, -0.39 20.35, -0.42 18.17 C-0.44 15.99, -4.08 7.1, -3.78 4.8 C-3.48 2.5, 0.23 4.17, 1.39 4.35 C2.54 4.53, 1.85 5.61, 3.16 5.87 C4.47 6.12, 7.96 6.74, 9.24 5.87 C10.51 5, 11.64 1.43, 10.8 0.63 C9.97 -0.16, 5.11 2.18, 4.22 1.11 C3.34 0.04, 5.78 -4.68, 5.49 -5.76 C5.19 -6.84, 3.43 -6.15, 2.47 -5.35 C1.52 -4.54, 0.17 -1.81, -0.24 -0.92 C-0.65 -0.03, -0.04 -0.15, 0 0" stroke="none" stroke-width="0" fill="#40c057" fill-rule="evenodd">&lt;/path>&lt;path d="M0 0 C-0.31 -0.07, -0.57 0.63, -1.83 -0.41 C-3.09 -1.46, -5.98 -5.62, -7.57 -6.27 C-9.16 -6.93, -10.52 -5.79, -11.36 -4.35 C-12.2 -2.91, -12.63 0.53, -12.61 2.37 C-12.6 4.22, -10.47 5.65, -11.27 6.74 C-12.07 7.83, -16.44 7.74, -17.42 8.89 C-18.41 10.04, -18.04 12.9, -17.2 13.64 C-16.36 14.39, -13.8 14.04, -12.38 13.35 C-10.96 12.66, -10.16 8.72, -8.7 9.48 C-7.24 10.23, -5 16.42, -3.62 17.87 C-2.24 19.32, -0.39 20.35, -0.42 18.17 C-0.44 15.99, -4.08 7.1, -3.78 4.8 C-3.48 2.5, 0.23 4.17, 1.39 4.35 C2.54 4.53, 1.85 5.61, 3.16 5.87 C4.47 6.12, 7.96 6.74, 9.24 5.87 C10.51 5, 11.64 1.43, 10.8 0.63 C9.97 -0.16, 5.11 2.18, 4.22 1.11 C3.34 0.04, 5.78 -4.68, 5.49 -5.76 C5.19 -6.84, 3.43 -6.15, 2.47 -5.35 C1.52 -4.54, 0.17 -1.81, -0.24 -0.92 C-0.65 -0.03, -0.04 -0.15, 0 0 M0 0 C-0.31 -0.07, -0.57 0.63, -1.83 -0.41 C-3.09 -1.46, -5.98 -5.62, -7.57 -6.27 C-9.16 -6.93, -10.52 -5.79, -11.36 -4.35 C-12.2 -2.91, -12.63 0.53, -12.61 2.37 C-12.6 4.22, -10.47 5.65, -11.27 6.74 C-12.07 7.83, -16.44 7.74, -17.42 8.89 C-18.41 10.04, -18.04 12.9, -17.2 13.64 C-16.36 14.39, -13.8 14.04, -12.38 13.35 C-10.96 12.66, -10.16 8.72, -8.7 9.48 C-7.24 10.23, -5 16.42, -3.62 17.87 C-2.24 19.32, -0.39 20.35, -0.42 18.17 C-0.44 15.99, -4.08 7.1, -3.78 4.8 C-3.48 2.5, 0.23 4.17, 1.39 4.35 C2.54 4.53, 1.85 5.61, 3.16 5.87 C4.47 6.12, 7.96 6.74, 9.24 5.87 C10.51 5, 11.64 1.43, 10.8 0.63 C9.97 -0.16, 5.11 2.18, 4.22 1.11 C3.34 0.04, 5.78 -4.68, 5.49 -5.76 C5.19 -6.84, 3.43 -6.15, 2.47 -5.35 C1.52 -4.54, 0.17 -1.81, -0.24 -0.92 C-0.65 -0.03, -0.04 -0.15, 0 0" stroke="#087f5b" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;/g>&lt;mask>&lt;/mask>&lt;g stroke-linecap="round">&lt;g stroke-opacity="0.9" fill-opacity="0.9" transform="translate(388.1646049331026 291.73753339505186) rotate(0 21.047557886136133 0)">&lt;path d="M0.26 0.28 C7.26 0.24, 34.61 -0.21, 41.55 -0.22 M-0.27 -0.05 C6.92 -0.02, 35.55 0.47, 42.51 0.36" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;/g>&lt;mask>&lt;/mask>&lt;g stroke-linecap="round">&lt;g stroke-opacity="0.9" fill-opacity="0.9" transform="translate(393.25993396287697 276.30300446808565) rotate(0 14.659303301924297 2.593116626464507)">&lt;path d="M0 0 C0.13 0.38, 0.09 1.58, 0.77 2.28 C1.46 2.97, 2.81 3.68, 4.1 4.19 C5.4 4.7, 6.64 5.13, 8.54 5.34 C10.43 5.55, 12.97 5.55, 15.48 5.45 C17.99 5.34, 21.44 5.28, 23.58 4.71 C25.72 4.14, 27.36 2.86, 28.32 2.03 C29.27 1.2, 29.15 0.12, 29.32 -0.26 M0 0 C0.13 0.38, 0.09 1.58, 0.77 2.28 C1.46 2.97, 2.81 3.68, 4.1 4.19 C5.4 4.7, 6.64 5.13, 8.54 5.34 C10.43 5.55, 12.97 5.55, 15.48 5.45 C17.99 5.34, 21.44 5.28, 23.58 4.71 C25.72 4.14, 27.36 2.86, 28.32 2.03 C29.27 1.2, 29.15 0.12, 29.32 -0.26" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;/g>&lt;mask>&lt;/mask>&lt;g stroke-opacity="0.9" fill-opacity="0.9" stroke-linecap="round" transform="translate(401.33384988679643 269.39213020227817) rotate(0 7.764217176558077 22.41115194065469)">&lt;path d="M8.39 0.35 C9.87 0.59, 11.9 3.79, 13.03 7.22 C14.17 10.64, 15.08 16.25, 15.2 20.92 C15.33 25.58, 14.63 31.39, 13.77 35.21 C12.91 39.03, 11.55 42.57, 10.05 43.81 C8.54 45.06, 6.3 44.75, 4.72 42.69 C3.14 40.63, 1.27 35.9, 0.56 31.48 C-0.14 27.06, 0 20.7, 0.48 16.16 C0.96 11.63, 2.03 6.85, 3.42 4.24 C4.8 1.63, 7.85 0.99, 8.8 0.49 C9.76 0, 9.17 0.92, 9.14 1.25 M7.74 0.52 C9.47 0.1, 11.68 2.21, 13 4.88 C14.31 7.55, 15.42 11.88, 15.63 16.55 C15.84 21.22, 15.11 28.52, 14.26 32.89 C13.41 37.25, 12.02 40.95, 10.54 42.72 C9.05 44.5, 6.92 44.94, 5.33 43.54 C3.73 42.14, 1.95 38.14, 0.97 34.33 C-0.01 30.51, -0.9 25.34, -0.57 20.65 C-0.25 15.96, 1.66 9.57, 2.91 6.19 C4.16 2.8, 6.12 1.3, 6.92 0.33 C7.73 -0.63, 7.77 0.08, 7.75 0.42" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;g stroke-linecap="round">&lt;g stroke-opacity="0.9" fill-opacity="0.9" transform="translate(394.77588547250286 308.04009652652667) rotate(0 14.659303301924297 -2.677051221420811)">&lt;path d="M0 0 C0.68 -0.72, 2.68 -3.4, 4.1 -4.32 C5.53 -5.24, 6.64 -5.3, 8.54 -5.52 C10.43 -5.73, 12.97 -5.73, 15.48 -5.63 C17.99 -5.52, 21.44 -5.45, 23.58 -4.86 C25.72 -4.28, 27.36 -2.95, 28.32 -2.1 C29.27 -1.24, 29.15 -0.12, 29.32 0.27 M0 0 C0.68 -0.72, 2.68 -3.4, 4.1 -4.32 C5.53 -5.24, 6.64 -5.3, 8.54 -5.52 C10.43 -5.73, 12.97 -5.73, 15.48 -5.63 C17.99 -5.52, 21.44 -5.45, 23.58 -4.86 C25.72 -4.28, 27.36 -2.95, 28.32 -2.1 C29.27 -1.24, 29.15 -0.12, 29.32 0.27" stroke="#000000" stroke-width="1" fill="none">&lt;/path>&lt;/g>&lt;/g>&lt;mask>&lt;/mask>&lt;g transform="translate(308.5 350) rotate(0 100 10)">&lt;text x="100" y="14.096" font-family="Excalifont, Xiaolai, Segoe UI Emoji" font-size="16px" fill="#1e1e1e" text-anchor="middle" style="white-space: pre;" direction="ltr" dominant-baseline="alphabetic">end user (web browser)&lt;/text>&lt;/g>&lt;g stroke-linecap="round">&lt;g transform="translate(236.5 132) rotate(0 56 48)">&lt;path d="M0.23 -1.01 C9.89 5.93, 40.46 26.13, 58.92 42.27 C77.38 58.41, 102.01 86.73, 110.98 95.83 M-1.1 1.07 C8.83 8.1, 41.99 27.42, 61.07 43.42 C80.14 59.42, 104.62 88.51, 113.34 97.06" stroke="#1e1e1e" stroke-width="2" fill="none">&lt;/path>&lt;/g>&lt;g transform="translate(236.5 132) rotate(0 56 48)">&lt;path d="M24.35 5.59 C13.47 1.34, 4.77 -1.07, 0.23 -1.01 M24.35 5.59 C18.41 3.55, 10.57 1.16, 0.23 -1.01" stroke="#1e1e1e" stroke-width="2" fill="none">&lt;/path>&lt;/g>&lt;g transform="translate(236.5 132) rotate(0 56 48)">&lt;path d="M14.46 19.55 C7.26 9.97, 2.32 2.27, 0.23 -1.01 M14.46 19.55 C11.26 13.45, 6.25 7.06, 0.23 -1.01" stroke="#1e1e1e" stroke-width="2" fill="none">&lt;/path>&lt;/g>&lt;/g>&lt;mask>&lt;/mask>&lt;/svg>
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="network_overview.svg">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Network overview
 &lt;/figcaption>
&lt;/figure>



&lt;/p>
&lt;p>The high-level steps of this setup process are:&lt;/p>
&lt;ol>
&lt;li>Create a self-hosted Docker-based Keycloak instance.&lt;/li>
&lt;li>Configure an authentication realm, OIDC client and test users in Keycloak.&lt;/li>
&lt;li>Configure the authentication provider in Velociraptor.&lt;/li>
&lt;li>Add test users to Velociraptor.&lt;/li>
&lt;li>Test the authentication process.&lt;/li>
&lt;/ol>
&lt;h2 id="create-a-docker-based-keycloak-instance">Create a Docker-based Keycloak instance&lt;/h2>
&lt;p>We assume that Docker has already been installed and configured on the
designated Keycloak host. We aren&amp;rsquo;t going to use Docker Compose but for
production deployment you might prefer to do so, and example configurations can
be found on the internet.&lt;/p>
&lt;p>Before we install Keycloak we are going to need a certificate for it to use. Here
we will generate a simple self-signed cert with corresponding private key but ideally in
production you would have a cert signed by a trusted CA.&lt;/p>
&lt;p>&lt;strong>1. Generate a key pair&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-sh"># Create keycloak-server.crt.pem and keycloak-server.key.pem
openssl req -newkey rsa:2048 -nodes -subj &amp;quot;/CN=keycloak.local&amp;quot; \
-addext &amp;quot;subjectAltName=DNS:keycloak.local,IP:192.168.56.1&amp;quot; \
-keyout keycloak-server.key.pem -x509 -days 3650 -out keycloak-server.crt.pem
# Set appropriate permissions on files
chmod -R 644 keycloak-server*
&lt;/code>&lt;/pre>
&lt;p>NOTE: The certificate SAN is required by Velociraptor. If not present you will receive
this error when trying to start Velociraptor.&lt;br>
&lt;code>error: gui: starting frontend: Get &amp;quot;https://keycloak.local/.well-known/openid-configuration&amp;quot;: x509: certificate relies on legacy Common Name field, use SANs instead&lt;/code>&lt;br>
Putting the IP in the SAN is not really necessary but helpful if you need to
connect to Keycloak&amp;rsquo;s admin page using it&amp;rsquo;s IP.&lt;/p>
&lt;p>Now that we have the key pair we can run Docker which will pull the latest
Keycloak image (26.0.7 at the time of writing).&lt;/p>
&lt;p>&lt;strong>2. Run the Docker command.&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-sh">docker run -p 443:443 -e KC_HOSTNAME=keycloak.local \
-e KC_BOOTSTRAP_ADMIN_USERNAME=admin -e KC_BOOTSTRAP_ADMIN_PASSWORD=admin \
-v /root/keycloak-server.crt.pem:/etc/x509/https/keycloak-server.crt.pem \
-v /root/keycloak-server.key.pem:/etc/x509/https/keycloak-server.key.pem \
-e KC_HTTPS_CERTIFICATE_FILE=/etc/x509/https/keycloak-server.crt.pem \
-e KC_HTTPS_CERTIFICATE_KEY_FILE=/etc/x509/https/keycloak-server.key.pem \
quay.io/keycloak/keycloak:latest start-dev --https-port=443
&lt;/code>&lt;/pre>
&lt;p>We set various Keycloak config options as Docker environment variables and
make the cert and private key available inside the Docker using volume mapping.&lt;/p>
&lt;p>If the Docker fails to start, you should inspect the command output for errors.
If successful it should report
&lt;code>Listening on: http://0.0.0.0:8080 and https://0.0.0.0:443&lt;/code>.&lt;/p>
&lt;p>The KC_BOOTSTRAP* variables create an initial user &lt;code>admin&lt;/code> with password
&lt;code>admin&lt;/code> which we use to configure Keycloak in the next section.&lt;/p>
&lt;h2 id="configure-keycloak">Configure Keycloak&lt;/h2>
&lt;p>Next we go through the steps that are almost the same as described in Keycloak&amp;rsquo;s
&lt;a href="https://www.keycloak.org/getting-started/getting-started-docker" target="_blank" >Getting started guide&lt;/a>
.&lt;/p>
&lt;p>Connect to Keycloak&amp;rsquo;s Admin Console (in this case: &lt;a href="https://keycloak.local" target="_blank" >https://keycloak.local&lt;/a>
) and
log in with the &lt;code>admin&lt;/code> user.&lt;/p>
&lt;p>&lt;strong>3. Create an authentication realm&lt;/strong>&lt;/p>
&lt;p>











&lt;figure id="a95eb8c08fa648913b9893b649864bc1">
 &lt;div data-featherlight="#a95eb8c08fa648913b9893b649864bc1" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak00.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak00.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>You can use any name for the realm but here we are going to just use &lt;code>myrealm&lt;/code>
for convenience.&lt;/p>
&lt;p>











&lt;figure id="53dcd412a99f4cf293824a7b329e2c3f">
 &lt;div data-featherlight="#53dcd412a99f4cf293824a7b329e2c3f" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak01.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak01.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>Click &lt;strong>Create&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>4. Create OIDC client configuration for Velociraptor&lt;/strong>&lt;/p>
&lt;p>In this step we create a new client record and client secret which we will use
later in the Velociraptor configuration. In the realm selection drop-down ensure
that you are in the new &lt;code>myrealm&lt;/code> realm.&lt;/p>
&lt;p>In the sidebar select &lt;strong>Clients&lt;/strong> and then select &lt;strong>Create client&lt;/strong>.&lt;/p>
&lt;p>











&lt;figure id="b765549e2d38410bcea9c79f931c3c84">
 &lt;div data-featherlight="#b765549e2d38410bcea9c79f931c3c84" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak02.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak02.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>This will start a 3-page configuration wizard. On the first page the &lt;strong>Client
ID&lt;/strong> is all that&amp;rsquo;s required. Enter &lt;code>velociraptor&lt;/code> and click &lt;strong>Next&lt;/strong>.&lt;/p>
&lt;p>











&lt;figure id="79217a623d69f8f8d2136f7b6f875fc7">
 &lt;div data-featherlight="#79217a623d69f8f8d2136f7b6f875fc7" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak03.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak03.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>On the second page, choose &lt;strong>Client authentication: ON&lt;/strong> and
&lt;strong>Authentication flow: Standard flow&lt;/strong> (only). Then click &lt;strong>Next&lt;/strong>.&lt;/p>
&lt;p>











&lt;figure id="0f8adf194ac2d23ee44bde03f971a5b8">
 &lt;div data-featherlight="#0f8adf194ac2d23ee44bde03f971a5b8" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak04.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak04.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>On the third page we use the following values (adapt to your DNS names if your
are replicating the setup in your own environment):&lt;/p>
&lt;ul>
&lt;li>Valid redirect URIs: &lt;code>https://velociraptor.local:8889/auth/oidc/keycloak/callback&lt;/code>&lt;/li>
&lt;li>Valid post logout redirect URIs:
&lt;code>https://velociraptor.local:8889/app/logoff.html&lt;/code>&lt;/li>
&lt;li>Web origins: &lt;code>https://velociraptor.local&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>











&lt;figure id="680a948778124e0b21e6b194ef5b310a">
 &lt;div data-featherlight="#680a948778124e0b21e6b194ef5b310a" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak05.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak05.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>Then click &lt;strong>Save&lt;/strong>. Your OIDC client configuration is now created.&lt;/p>
&lt;p>On the page that follows, go to the &lt;strong>Credentials&lt;/strong> tab. There you will find the
&lt;strong>Client secret&lt;/strong> which you will need for your Velociraptor configuration. It is
randomly generated and you can regenerate it if desired, but if you do so then
don&amp;rsquo;t forget to update your Velociraptor server&amp;rsquo;s config with the new secret.
Typically you would only regenerate it if you suspected a compromised secret.&lt;/p>
&lt;p>











&lt;figure id="c028e0441ef62c53cd66ed4eb371c2bd">
 &lt;div data-featherlight="#c028e0441ef62c53cd66ed4eb371c2bd" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak06.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak06.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>The next action is to configure email addresses as login usernames. To do that
navigate via the sidebar to &lt;strong>Realm settings&lt;/strong> &amp;gt; &lt;strong>Login&lt;/strong> tab. Ensure that
&lt;strong>Email as username&lt;/strong> and &lt;strong>Login with email&lt;/strong> are enabled. The additional user
preferences shown in the following screenshot are optional and in your case
would be determined by your organizational policies.&lt;/p>
&lt;p>











&lt;figure id="688b70e233f7b149f02f81f39ecb073a">
 &lt;div data-featherlight="#688b70e233f7b149f02f81f39ecb073a" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak08.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak08.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>The last action in this step is to configure the required actions for
authentication so that users don&amp;rsquo;t have to enter additional information when
they first log in.
Navigate via the sidebar to &lt;strong>Authentication&lt;/strong> &amp;gt; &lt;strong>Required actions&lt;/strong> tab.
Disable all options except &lt;strong>Update password&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>5. Create test users&lt;/strong>&lt;/p>
&lt;p>We will need at least one user account to test the authentication. From the
sidebar select &lt;strong>Users&lt;/strong> and then click the &lt;strong>Create new user&lt;/strong> button.&lt;/p>
&lt;p>











&lt;figure id="f75abd5fd7309f3da9986f814ab200a5">
 &lt;div data-featherlight="#f75abd5fd7309f3da9986f814ab200a5" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak07.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak07.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>For the user account I am going to create one named &lt;code>bob@local&lt;/code>. Remember that
we previously enabled &lt;strong>Email as username&lt;/strong> and &lt;strong>Login with email&lt;/strong>, so all
other fields are optional. I also selected &lt;strong>Email verified&lt;/strong> to avoid an email
verification step when logging in.&lt;/p>
&lt;p>











&lt;figure id="cb7b6a63eddd5ea217e2a8190ea68bd7">
 &lt;div data-featherlight="#cb7b6a63eddd5ea217e2a8190ea68bd7" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak09.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak09.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>After creating the account, go to the Credentials tab and set a password. Note
that we leave &lt;strong>Temporary:ON&lt;/strong> set so that the password must be changed on first
logon. Note also that this is a simplified demonstration so for that reason
we&amp;rsquo;re ONLY using password auth while Keycloak easily supports multi-factor
authentication.&lt;/p>
&lt;p>











&lt;figure id="d0e5f2107f59ca1869103d86263ad441">
 &lt;div data-featherlight="#d0e5f2107f59ca1869103d86263ad441" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak10.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak10.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>Repeat the user creation actions to also create a user account
&lt;code>fred@local&lt;/code>.&lt;/p>
&lt;p>











&lt;figure id="2e597f774790a1692072c8401de23a6c">
 &lt;div data-featherlight="#2e597f774790a1692072c8401de23a6c" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/keycloak11.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="keycloak11.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>Now we are ready to move to configuring the Velociraptor side of things.&lt;/p>
&lt;h2 id="configure-velociraptor">Configure Velociraptor&lt;/h2>

&lt;div class="mynotices tip">
 &lt;div heading="tip">&lt;p>While configuring, testing and potentially troubleshooting problems, it&amp;rsquo;s
easier if you can see Velociraptor&amp;rsquo;s log messages. You can stop the server
service and then run the server manually on the command line by using the
following commands:&lt;/p>
&lt;pre>&lt;code class="language-bash">sudo systemctl stop velociraptor_server
sudo -u velociraptor bash
velociraptor -c /etc/velociraptor/server.config.yaml frontend -v
&lt;/code>&lt;/pre>
&lt;p>This will display the log messages in the terminal.&lt;/p>
&lt;/div>
&lt;/div>


&lt;p>&lt;strong>6. Add the authenticator settings to your Velciraptor config&lt;/strong>&lt;/p>
&lt;p>In the &lt;code>GUI&lt;/code> section of your Velociraptor config you should have the following
authenticator settings by default:&lt;/p>
&lt;pre>&lt;code class="language-yaml"> authenticator:
 type: Basic
&lt;/code>&lt;/pre>
&lt;p>We no longer want Basic auth and instead want SSO, so replace that with these
new settings to match our Keycloak configuration:&lt;/p>
&lt;pre>&lt;code class="language-yaml"> type: oidc
 oidc_issuer: https://keycloak.local/realms/myrealm
 oidc_name: keycloak
 avatar: https://www.keycloak.org/resources/images/logo.svg
 oauth_client_id: velociraptor
 oauth_client_secret: p4EABoniopnasbrmstDnsHrQcSukNmp2
&lt;/code>&lt;/pre>
&lt;p>The &lt;code>oauth_client_secret&lt;/code> is the value we obtained at the end of step 4. The
&lt;code>oauth_client_id&lt;/code> is the name we used for the OIDC Client ID in that same
section.&lt;/p>
&lt;p>The &lt;code>oidc_name&lt;/code> can be anything you want but it must exactly match
(case-sensitive) the substring used in the &lt;strong>Valid redirect URIs&lt;/strong> field of the
client configuration in Keycloak.&lt;/p>
&lt;p>Keycloak requires that the &lt;code>oidc_issuer&lt;/code> field specify the path
&lt;code>/realms/myrealm&lt;/code> as this is where is serves the OpenID Endpoint Configuration
that Velociraptor will need to access. If you have somehow gotten this wrong
then Velociraptor will log an error such as:
&lt;code>[ERROR] can not get information from OIDC provider, check https://keycloak.local/.well-known/openid-configuration is correct and accessible from the server.&lt;/code>&lt;/p>
&lt;p>Before you start Velociraptor, if you are using a self-signed cert for Keycloak
then also attend to the next step.&lt;/p>
&lt;p>&lt;strong>7. Copy the Keycloak server cert to the trusted root store.&lt;/strong>&lt;/p>
&lt;p>Because the Keycloak server is using a certificate that wasn&amp;rsquo;t issued by a
trusted CA, we need to add it&amp;rsquo;s certificate to the trusted root store on the
Velociraptor server. Assuming your server is Ubuntu or similar this means saving
a copy of the certificate to &lt;code>/etc/ssl/certs&lt;/code>.&lt;/p>
&lt;p>Without this step you will see this error in the log when attempting to start
Velociraptor:
&lt;code>error: gui: starting frontend: Get &amp;quot;https://keycloak.local/...&amp;quot;: x509: certificate signed by unknown authority (possibly because of &amp;quot;crypto/rsa: verification error&amp;quot; while trying to verify candidate authority certificate &amp;quot;keycloak.local&amp;quot;)&lt;/code>&lt;/p>
&lt;p>&lt;strong>8. Start Velociraptor&lt;/strong>&lt;/p>
&lt;p>The server should now start cleanly and continue running. In the log messages
you should see &lt;code>GUI will use the oidc authenticator&lt;/code>. That means everything is
OK with the authenticator config.&lt;/p>
&lt;p>One possible gotcha is if the server&amp;rsquo;s &lt;code>GUI.public_url&lt;/code> setting is still using
an IP address or if &lt;code>GUI.bind_address&lt;/code> is not set to &lt;code>0.0.0.0&lt;/code> then you may get
stopped with the error:
&lt;code>error: gui: starting frontend: Authentication type 'oidc' requires valid public_url parameter&lt;/code>&lt;/p>
&lt;p>In this case the &lt;code>GUI.public_url&lt;/code> is set to &lt;code>https://velociraptor.local:8889/&lt;/code>.&lt;/p>
&lt;h2 id="add-test-users">Add test users&lt;/h2>
&lt;p>We have created 2 users in Keycloak but these users don&amp;rsquo;t yet exist in
Velociraptor. Velociraptor has it&amp;rsquo;s own permissions model and therefore needs to
know about any users so that once they authenticate the correct permissions can
be applied.&lt;/p>
&lt;p>Users can be created using VQL in Velociraptor notebooks but since we have now
switched authentication providers we no longer have access to the GUI. Of course
we could have added the users before we switched but let&amp;rsquo;s pretend we didn&amp;rsquo;t and
instead do it from the command line.&lt;/p>
&lt;p>We will make &lt;code>bob@local&lt;/code> a server admin and grant &lt;code>fred@local&lt;/code> the &amp;ldquo;reader&amp;rdquo;
role, which provides minimal access to Velociraptor&amp;rsquo;s GUI. The following two
commands will create these users:&lt;/p>
&lt;p>&lt;strong>9. Add users to the datastore&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-sh">velociraptor --config server.config.yaml user add --role administrator bob@local
velociraptor --config server.config.yaml user add --role reader fred@local
&lt;/code>&lt;/pre>
&lt;p>NOTE: We provide the &lt;code>--config&lt;/code> flag so that this invocation of the velociraptor
binary knows which datastore to add the new users to. This can be done while the
server service is running or not running, but either way the service will need
to be restarted to update itself with the datastore changes.&lt;/p>
&lt;p>Because of our OIDC authenticator config, when adding each user we will receive
an acknowledgement message saying
&lt;code>&amp;quot;Authentication will occur via oidc - therefore no password needs to be set.&amp;quot;&lt;/code>&lt;/p>
&lt;h2 id="test-authentication-process">Test authentication process&lt;/h2>
&lt;p>Test the authentication process by going to &lt;code>https://velociraptor.local:8889/&lt;/code>&lt;/p>
&lt;p>You will be presented with the choice to log in with Keycloak (multiple
authentication providers are supported but we only have one configured).&lt;/p>
&lt;p>











&lt;figure id="31e5adca94cd8097aa53d3d80b854494">
 &lt;div data-featherlight="#31e5adca94cd8097aa53d3d80b854494" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/auth00.png" alt="">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="auth00.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>Enter initial credentials (password that was set in Keycloak).&lt;/p>
&lt;p>











&lt;figure id="cdf9c2bc39d8b9246798ea0c93a41a77">
 &lt;div data-featherlight="#cdf9c2bc39d8b9246798ea0c93a41a77" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/auth01.png" alt="Login page">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="auth01.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Login page
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>You will be required to change the password because we configured
&lt;strong>Temporary:ON&lt;/strong> when setting the account&amp;rsquo;s password.&lt;/p>
&lt;p>











&lt;figure id="2aa22cd981916f37b088880464064e88">
 &lt;div data-featherlight="#2aa22cd981916f37b088880464064e88" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/auth02.png" alt="Change the password">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="auth02.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Change the password
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>











&lt;figure id="8a64b7f7025e7880b3bf2e942eb4a6b9">
 &lt;div data-featherlight="#8a64b7f7025e7880b3bf2e942eb4a6b9" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/auth03.png" alt="Successful login!">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="auth03.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Successful login!
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>











&lt;figure id="a8eb9d50ba9e3b752201affb797b7391">
 &lt;div data-featherlight="#a8eb9d50ba9e3b752201affb797b7391" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/auth04.png" alt="We can verify that the user has the server admin role.">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="auth04.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 We can verify that the user has the server admin role.
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>











&lt;figure id="e6be4f3b4580ccf759ee6011572ac2d7">
 &lt;div data-featherlight="#e6be4f3b4580ccf759ee6011572ac2d7" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/setup_keycloak/auth05.png" alt="We can sign out and sign in again.">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="auth05.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 We can sign out and sign in again.
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;p>The same process applies to &lt;code>fred@local&lt;/code> except that we can verify in
Velociraptor that the user has the read-only role.&lt;/p>

&lt;div class="mynotices tip">
 &lt;div heading="tip">&lt;p>For testing multiple users in the same web browser you may have trouble
fully logging a user out because while logged out of Velociraptor the OIDC
session is still active.&lt;/p>
&lt;p>Logout of the OIDC session can be achieved by
navigating to the the endpoint
&lt;code>https://keycloak.local/realms/myrealm/protocol/openid-connect/logout&lt;/code>
from within the same web browser and choosing to log out.&lt;/p>
&lt;/div>
&lt;/div>


&lt;h2 id="what-next">What next?&lt;/h2>
&lt;p>Once you have the working authentication setup, as per this guide, then you can
begin experimenting with additional options while knowing that any change which
causes a negative effect can be reverted back to a known working state. This is
a much easier approach than diving in with a complex configuration and spending
hours troubleshooting why it doesn&amp;rsquo;t work.&lt;/p>
&lt;p>Since the Docker installation used in the guide is non-permanent it will reset
when you restart the docker VM. For testing and experimenting that&amp;rsquo;s a good
thing as you gain familiarity by going through the process. As mentioned,
Keycloak supports multifactor authentication, complex authentication flow
options, themeable login screens, and many other cool features. However for
permanent configuration you will need to learn how to create a persistent
Keycloak database, possibly using a different deployment method.&lt;/p></description></item><item><title>How to manage storage space on the server</title><link>https://docs.velociraptor.app/knowledge_base/tips/deleting_old_data/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/deleting_old_data/</guid><description>&lt;h1 id="how-to-manage-storage-space-on-the-server">How to manage storage space on the server&lt;/h1>
&lt;p>Velociraptor can collect a lot of data quickly but usually the data is
only relevant for short periods of time.&lt;/p>
&lt;p>Disk space management is an important part of Velociraptor
administrators tasks. You can keep an eye on the disk utilization as
shown on the dashboard.&lt;/p>
&lt;p>If you need to grow the disk during an investigation, and you are
using a cloud VM from Amazon with Elastic Block Storage (EBS), disk
space management is very easy. In the AWS cloud it is possible to
resize disk space dynamically. See &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/requesting-ebs-volume-modifications.html" target="_blank" >Requesting
Modifications&lt;/a>

to Your EBS Volumes and &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html" target="_blank" >Extending a Linux File System After
Resizing&lt;/a>

a Volume. You can do this without even restarting the server.&lt;/p>
&lt;p>If you must attach a new volume you can migrate data from the old
datastore directory (as specified in the config file) to the new
directory by simply copying all the files. You must ensure permissions
remain the same (typically files are owned by the &lt;code>velociraptor&lt;/code> low
privilege local linux account).&lt;/p>
&lt;p>It is also possible to start with an empty datastore directory and
only copy selected files:&lt;/p>
&lt;ol>
&lt;li>The &lt;code>users&lt;/code> directory contains user accounts (hashed password etc)&lt;/li>
&lt;li>The &lt;code>acl&lt;/code> directory contains user ACLs&lt;/li>
&lt;li>The &lt;code>artifact_definitions&lt;/code> contains custom artifacts&lt;/li>
&lt;li>The &lt;code>config&lt;/code> directory contains various configuration settings.&lt;/li>
&lt;li>The &lt;code>orgs&lt;/code> directory contains data from various orgs.&lt;/li>
&lt;/ol>
&lt;p>Velociraptor will automatically re-enroll clients with the same client
id (The client id is set by the client itself) as needed.&lt;/p>
&lt;p>You can also check the backups directory to recover from backup.&lt;/p>
&lt;h2 id="management-of-old-collections">Management of old collections&lt;/h2>
&lt;p>You can automatically delete old collections using the
&lt;a href="https://docs.velociraptor.app/artifact_references/pages/server.utils.deletemanyflows/" >Server.Utils.DeleteManyFlows
&lt;/a>
 and
&lt;a href="https://docs.velociraptor.app/artifact_references/pages/server.utils.deletemonitoringdata/" >Server.Utils.DeleteMonitoringData
&lt;/a>

artifacts. These are server artifacts which can delete flows and
monitoring data older than the specified time.&lt;/p></description></item><item><title>How to use your own certificates to secure your Velociraptor deployment</title><link>https://docs.velociraptor.app/blog/2024/2024-07-22-how-to-use-your-own-certificates/</link><pubDate>Tue, 16 Jul 2024 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/blog/2024/2024-07-22-how-to-use-your-own-certificates/</guid><description>&lt;p>This article was reproduced with permission from
&lt;a href="https://reliancecyber.com/how-to-use-your-own-certificates-to-secure-your-velociraptor-deployment/" target="_blank" >reliancecyber.com&lt;/a>
. It
outlines some of the practical steps needed to deploy Velociraptor
with custom certificates and some step by step troubleshooting steps
that can be used to diagnose deployment issues.&lt;/p>
&lt;h2 id="using-digicert-as-the-certificate-authority">Using DigiCert as the certificate Authority&lt;/h2>
&lt;p>Velociraptor is a robust open-source tool designed for endpoint
monitoring and digital forensics and response.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Velociraptor is a robust open-source tool designed for endpoint
monitoring and digital forensics and response. Whether you deploy it
on-premise or in the cloud, securing communication between the
Velociraptor server and its clients is crucial. This blog post will
guide you through creating and installing TLS certificates using
DigiCert as your Certificate Authority (CA).&lt;/p>
&lt;p>This guide has been written to provide additional guidance to the
following official Velociraptor articles.&lt;/p>
&lt;p>&lt;a href="https://docs.velociraptor.app/knowledge_base/tips/ssl/" target="_blank" >How do I use my own SSL certificates?&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://docs.velociraptor.app/docs/deployment/security/" target="_blank" >Velociraptor Security Configuration&lt;/a>
.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>Before getting started, ensure you have the following:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Domain name&lt;/em>: Own or control a domain name, such as example.com.&lt;/li>
&lt;li>&lt;em>Accessible Velociraptor server&lt;/em>: Ensure your server is accessible via
a domain name, e.g., DNS A record points to your Velociraptor
server’s Public IP.&lt;/li>
&lt;li>&lt;em>DigiCert&lt;/em> account: A valid SSL certificate from DigiCert for your domain.&lt;/li>
&lt;li>&lt;em>OpenSSL&lt;/em>: Installed on your machine.&lt;/li>
&lt;/ul>
&lt;h2 id="creating-the-certificate-files">Creating the certificate files&lt;/h2>
&lt;p>You will need three key files for the Velociraptor server:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Velociraptor.pem&lt;/em>: Contains the public certificate identifying your
Velociraptor server.&lt;/li>
&lt;li>&lt;em>your_domain_name.key&lt;/em>: Contains the private key for your SSL
certificate. Keep this file secure.&lt;/li>
&lt;li>&lt;em>CA_chain.pem&lt;/em>: Contains the certificate chain of your enterprise
CA, including intermediate and root certificates.&lt;/li>
&lt;/ul>
&lt;p>DigiCert will provide the following files:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Private Key&lt;/em>: &lt;code>your_domain_name.key&lt;/code>&lt;/li>
&lt;li>&lt;em>Primary Certificate&lt;/em>: &lt;code>your_domain_name.crt&lt;/code>&lt;/li>
&lt;li>&lt;em>Intermediate Certificate&lt;/em>: &lt;code>DigiCertCA.crt&lt;/code>&lt;/li>
&lt;li>&lt;em>Root Certificate&lt;/em>: &lt;code>TrustedRoot.crt&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>For details on how to request your certificates &lt;a href="https://www.digicert.com/faq/public-trust-and-certificates/how-do-i-order-a-tls-ssl-certificate" target="_blank" >How do I Order a TLS/SSL Certificate? | DigiCert FAQ&lt;/a>
&lt;/p>
&lt;h2 id="creating-velociraptorpem">Creating Velociraptor.pem&lt;/h2>
&lt;p>To create the Velociraptor.pem file, you need to convert the Primary
Certificate (&lt;code>your_domain_name.crt&lt;/code>) file from CRT to PEM format.&lt;/p>
&lt;p>Open a terminal and run the following command:&lt;/p>
&lt;pre>&lt;code>openssl x509 -in your_domain_name.crt -out velociraptor.pem -outform PEM
&lt;/code>&lt;/pre>
&lt;p>Verify the certificate details:&lt;/p>
&lt;pre>&lt;code>openssl x509 -in velociraptor.pem -text -noout
&lt;/code>&lt;/pre>
&lt;p>You should see the details of your certificate, such as the issuer,
the subject, the validity period, and the public key.&lt;/p>
&lt;h2 id="verifying-the-key-file">Verifying the key file&lt;/h2>
&lt;p>Ensure the private key (&lt;code>your_domain_name.key&lt;/code>) is in PEM format and
decrypted. When viewed, the file should look like this:&lt;/p>
&lt;pre>&lt;code>-----BEGIN RSA PRIVATE KEY-----

 {base64 encoded data}

-----END RSA PRIVATE KEY-----
&lt;/code>&lt;/pre>
&lt;p>To verify that the key format is valid, run the following command:&lt;/p>
&lt;pre>&lt;code>openssl rsa -in your_domain_name.key -check
&lt;/code>&lt;/pre>
&lt;p>You should see &lt;code>RSA key ok&lt;/code>.&lt;/p>
&lt;h2 id="creating-ca_chainpem">Creating CA_chain.pem&lt;/h2>
&lt;p>To create the CA_chain.pem file, you need to combine the intermediate
certificate (&lt;code>DigiCertCA.crt&lt;/code>) and the root certificate
(&lt;code>TrustedRoot.crt&lt;/code>) into one file. This can be done by simply
concatenating the two files using a text editor or a command line
tool. For example, you can run the following command:&lt;/p>
&lt;pre>&lt;code>cat DigiCertCA.crt TrustedRoot.crt &amp;gt; CA_chain.pem
&lt;/code>&lt;/pre>

&lt;div class="mynotices note">
 &lt;div heading="note">&lt;p>Ensure the order is correct: server certificate first, followed by intermediate certificates (you may have more than one), and finally the root certificate.&lt;/p>
&lt;/div>
&lt;/div>


&lt;p>You should now have the following files in your cert folder:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Velociraptor.pem&lt;/em> (contains only the server certificate)&lt;/li>
&lt;li>&lt;em>your_domain_name.key&lt;/em> (contains the unencrypted private key)&lt;/li>
&lt;li>&lt;em>CA_chain.pem&lt;/em> (contains the certificate chain of your enterprise CA)&lt;/li>
&lt;/ul>
&lt;h2 id="configuring-velociraptor">Configuring Velociraptor&lt;/h2>
&lt;p>To enable TLS encryption for the Velociraptor server and client:&lt;/p>
&lt;h3 id="generate-a-self-signed-ssl-configuration">Generate a Self-Signed SSL Configuration:&lt;/h3>
&lt;pre>&lt;code>./velociraptor-0.72.3-linux-amd64 config generate -i
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Note&lt;/strong>: The version number may be different for the most recent release.&lt;/p>
&lt;p>











&lt;figure id="e0c68f6eeeab6ad71ad11ff215aa841e">
 &lt;div data-featherlight="#e0c68f6eeeab6ad71ad11ff215aa841e" class="figure">
 &lt;img src="https://docs.velociraptor.app/blog/2024/2024-07-22-how-to-use-your-own-certificates/Configuring-Velociraptor.png" alt="The velociraptor configuration generator screenshot">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="Configuring-Velociraptor.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 The velociraptor configuration generator screenshot
 &lt;/figcaption>
&lt;/figure>




&lt;/p>

&lt;div class="mynotices note">
 &lt;div heading="note">&lt;p>In this configuration I set frontend to communicate over port 443 as
most firewalls in a network will allow this traffic outbound making it
easier for the deployment of clients.&lt;/p>
&lt;/div>
&lt;/div>


&lt;h2 id="update-the-server-configuration">Update the Server Configuration:&lt;/h2>
&lt;p>To use your own Certificates, you need to update the server
configuration file (&lt;code>server.config.yaml&lt;/code>)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Locate the frontend section and add the &lt;code>tls_certificate_filename&lt;/code>
and &lt;code>tls_private_key_filename&lt;/code> parameters (these are not included by
default).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Enter the absolute path to these files. For testing, we placed them
in /etc, but you may want to use a different location for
production use.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-yaml">Frontend:

 tls_certificate_filename: /etc/velociraptor.pem

 tls_private_key_filename: /etc/your_domain_key.key
&lt;/code>&lt;/pre>
&lt;p>











&lt;img class="inline" src="Configuring-server-update-Velociraptor.png" />




&lt;/p>
&lt;h2 id="update-the-client-configuration">Update the client configuration:&lt;/h2>
&lt;p>&lt;strong>Note&lt;/strong>: if you have already exported a &lt;code>client.config.yaml&lt;/code>, then you
need to update the client section in both &lt;code>server.config.yaml&lt;/code>
configuration file and the &lt;code>client.config.yaml&lt;/code> configuration
file. Remember, the client configuration is embedded into the server
configuration file, so you need to update it there as well.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>In the client section, modify &lt;code>use_self_signed_ssl&lt;/code> to be
&lt;strong>false&lt;/strong>. This will tell the client to use the CA certificate instead
of the server certificate for verification.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copy and paste the CA root and intermediate certificates (created
in the &lt;code>CA_chain.pem&lt;/code> file) to the &lt;code>root_certs&lt;/code> parameter. This will
allow the client to trust the CA certificate chain. For example:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-yaml">use_self_signed_ssl: false
Crypto:
 root_certs: |
 -----BEGIN CERTIFICATE-----
 The Intermediate Certificate

 -----END CERTIFICATE-----

 -----BEGIN CERTIFICATE-----

 The Root Certificate

 -----END CERTIFICATE-----
&lt;/code>&lt;/pre>

&lt;div class="mynotices note">
 &lt;div heading="note">&lt;p>As discussed in the certificate section, ensure that the intermediate
and root certificates are in the correct order. The server certificate
should come first, followed by any intermediate certs, and finally the
root trusted authority certificate (if self-signed) for more
information, please see
&lt;a href="https://www.rfc-editor.org/rfc/rfc4346#section-7.4.2" target="_blank" >https://www.rfc-editor.org/rfc/rfc4346#section-7.4.2&lt;/a>
&lt;/p>
&lt;/div>
&lt;/div>


&lt;h2 id="testing-the-tls-encryption">Testing the TLS Encryption&lt;/h2>
&lt;p>To verify the TLS encryption:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>GUI&lt;/strong>: Launch the Velociraptor server and connect to the GUI using
your web browser. You should be able to access the GUI using the new
certificate. You may need to trust the certificate in your browser
or system to prevent errors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Frontend&lt;/strong>: Launch the Velociraptor client and check the logs for
any errors. The client should connect securely to the server using
the trusted CA chain and the new server certificate.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>No changes need to be made to the pinned certificate name, nor do
any certificates need to be modified in the configuration files.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h3 id="connectioncertificate-errors">Connection/certificate errors:&lt;/h3>
&lt;p>To validate that the certificates you are using are in the right
format, you can use the command to diagnose issues:&lt;/p>
&lt;pre>&lt;code>openssl [x509|rsa] -in CERT_FILE -text -noout
&lt;/code>&lt;/pre>
&lt;p>If the certificates are in the right format and valid you should use
curl to confirm connectivity by requesting the &lt;code>server.pem&lt;/code> file from
the velociraptor server (as detailed in &lt;a href="https://docs.velociraptor.app/docs/deployment/troubleshooting/" target="_blank" >Troubleshooting and
Debugging&lt;/a>
).&lt;/p>
&lt;h3 id="use-curl-from-the-server-localhost">Use curl from the server localhost&lt;/h3>
&lt;pre>&lt;code>curl https://localhost/server.pem -vvv
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Reason&lt;/strong>: This command tests the server’s ability to serve the
certificate file (&lt;code>server.pem&lt;/code>) over HTTPS from the local machine. Using
the &lt;code>-vvv&lt;/code> flag enables verbose output, providing detailed information
about the connection process, including SSL/TLS handshake details. It
helps to confirm that:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Local Server Configuration&lt;/strong>: The server is properly configured to
handle HTTPS requests.&lt;/li>
&lt;li>&lt;strong>Certificate Availability&lt;/strong>: The certificate file is accessible and
correctly served by the server.&lt;/li>
&lt;/ol>
&lt;h3 id="use-curl-from-the-server-localhost-allowing-self-signed-certificates">Use curl from the server localhost allowing self-signed certificates&lt;/h3>
&lt;pre>&lt;code>curl https://localhost/server.pem -vvv -k
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Reason&lt;/strong>: This command includes the -k option, which allows
connections to servers using self-signed certificates. It helps to:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Bypass SSL Verification&lt;/strong>: Ensure that the server can still serve the
certificate even when SSL verification is bypassed. This is useful
for testing purposes when using self-signed certificates.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Debugging&lt;/strong>: Identify issues related to SSL verification failures
that might not be apparent when SSL verification is enforced.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="use--curl-from-the-localhost-via-dns">Use curl from the localhost via DNS&lt;/h3>
&lt;pre>&lt;code>curl https://www.example.com/server.pem -vvv
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Reason&lt;/strong>: Running this command from the localhost but using the
domain name tests:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>DNS Resolution&lt;/strong>: Ensure that the domain name resolves correctly to the local server.&lt;/li>
&lt;li>&lt;strong>SSL/TLS Configuration&lt;/strong>: Confirm that the server is correctly serving the certificate over the domain name.&lt;/li>
&lt;/ol>
&lt;h3 id="use-curl-from-a-remote-client">Use curl from a remote client&lt;/h3>
&lt;pre>&lt;code>curl https://www.example.com/server.pem -vvv
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Reason&lt;/strong>: This command tests the following from a remote client (a
different machine than the server):&lt;/p>
&lt;ol>
&lt;li>&lt;strong>External Connectivity&lt;/strong>: Ensure that the server is accessible over
the internet or network and that there are no firewall or network
issues preventing access.&lt;/li>
&lt;li>&lt;strong>SSL/TLS Configuration&lt;/strong>: Confirm that the SSL/TLS setup is correct
and the server is properly serving the certificate to external
clients.&lt;/li>
&lt;li>&lt;strong>Certificate Acceptance&lt;/strong>: Verify that the client can accept and
validate the certificate, ensuring the trust chain is correctly
established.&lt;/li>
&lt;/ol>
&lt;p>These steps validate the entire communication path, from local server
configuration to remote client connectivity.&lt;/p>
&lt;h2 id="proxy-errors">Proxy Errors:&lt;/h2>
&lt;p>A proxy or SSL inspection device is a network device that inspects and
modifies the traffic between the client and the server. Sometimes
these devices can cause problems, especially if they are not
configured properly or are incompatible with the server’s TLS version
or cipher suite.&lt;/p>
&lt;p>One possible error is this Server reports:&lt;/p>
&lt;blockquote>
&lt;p>http: TLS handshake error from XX.XX.XX.XX: :22439 read tcp XX.XX.XX.XX:443-&amp;gt; XX.XX.XX.XX:22439: read: connection reset by peer&lt;/p>
&lt;/blockquote>
&lt;p>This means the server-client TLS connection was interrupted. This
could be due to network issues, firewall settings, or expired
certificates.&lt;/p>
&lt;p>Another possible error reported by the client:&lt;/p>
&lt;blockquote>
&lt;p>wsarecv: An existing connection was forcibly closed by the remote host.&lt;/p>
&lt;/blockquote>
&lt;p>This means the server or something in between closed the connection
abruptly. This could be due to server overload, crash, or shutdown, or
a proxy or SSL inspection device that interferes with the connection.&lt;/p>
&lt;p>To check if there is a proxy or SSL inspection device that is causing the connection errors, run this command:&lt;/p>
&lt;pre>&lt;code>curl https[://]server.com/server.pem -vvv
&lt;/code>&lt;/pre>
&lt;p>This command tries to download the server’s certificate file using
curl. If the command succeeds, there is no proxy or SSL inspection
device that is blocking or altering the connection. If the command
fails or idles, there is something in between that is preventing or
delaying the connection.&lt;/p>
&lt;p>If you suspect that there is a proxy or SSL inspection device that is
causing the connection errors, try these solutions:&lt;/p>
&lt;ul>
&lt;li>Review the configurations of the proxy or SSL inspection device and
make sure they are compatible with the server’s TLS version and
cipher suite. You can use tools like &lt;code>SSL Labs&lt;/code> or &lt;code>TestSSL&lt;/code> to check
the server’s TLS configuration and compare it with the proxy or SSL
inspection device.&lt;/li>
&lt;li>Disable or bypass the proxy or SSL inspection device temporarily and
see if the connection errors go away. This can help you isolate the
problem and confirm that the proxy or SSL inspection device is the
culprit.&lt;/li>
&lt;li>Contact the administrator or vendor of the proxy or SSL inspection
device and ask for help or guidance on how to resolve the
issue. They might have some tips or updates that can fix the
problem.&lt;/li>
&lt;/ul>
&lt;p>For full details on troubleshooting or for any other debugging issues,
please see &lt;a href="https://docs.velociraptor.app/docs/troubleshooting/" target="_blank" >Troubleshooting and Debugging&lt;/a>
&lt;/p>
&lt;h2 id="about-the-author">About the author&lt;/h2>
&lt;p>











&lt;figure id="3157db7f26b7206f7caa86c7371c3012">
 &lt;div data-featherlight="#3157db7f26b7206f7caa86c7371c3012" class="figure">
 &lt;img src="https://docs.velociraptor.app/blog/2024/2024-07-22-how-to-use-your-own-certificates/Untitled-design-5-e1721652417163.png" alt="Picture of Chris Hayes - Head of IR">
 &lt;/div>
 &lt;figcaption>
 &lt;a class="image-link" href="Untitled-design-5-e1721652417163.png">&lt;i class="fa fa-download">&lt;/i>&lt;/a>
 Picture of Chris Hayes - Head of IR
 &lt;/figcaption>
&lt;/figure>




&lt;/p>
&lt;h3 id="chris-hayes-head-of-incident-response-at-reliance-cyber">Chris Hayes, Head of Incident Response at Reliance Cyber&lt;/h3>
&lt;p>Chris possesses over 10 years of experience across a series of Cyber roles within both the private public sector. As ex-military, Chris has responded to some of the largest and most high-profile cyber-attacks in addition to tracking sophisticated nation state threat actor groups.&lt;/p></description></item><item><title>How can I clone an organization with all its hunts and artifacts to another instance?</title><link>https://docs.velociraptor.app/knowledge_base/tips/clone_organization_to_other_server/</link><pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/clone_organization_to_other_server/</guid><description>&lt;h1 id="how-can-i-clone-an-organization-with-all-its-hunts-and-artifacts-to-another-instance">How can I clone an organization with all its hunts and artifacts to another instance?&lt;/h1>
&lt;p>There are a few use cases where you need to migrate data from an instance to another. It could be for educational purpose to provide pre-filled labs, or to provide a third party with the exact insights you had during your investigation. Event for archiving, being able to reload a dataset in Velociraptor to review what was done if something went amiss, being able to export and import an organization dataset could prove useful.&lt;/p>
&lt;h2 id="exporting">Exporting&lt;/h2>
&lt;p>Everything related to an organization is stored in a directory under &lt;code>&amp;lt;file store&amp;gt;/orgs&lt;/code>. There is:&lt;/p>
&lt;ul>
&lt;li>A directory with the org ID&lt;/li>
&lt;li>A configuration file &lt;code>&amp;lt;orgId&amp;gt;.json.db&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>We need to transfer both to the destination server.&lt;/p>
&lt;ol>
&lt;li>Identify the org ID, either with the &lt;a href="https://docs.velociraptor.app/artifact_references/pages/server.orgs.listorgs/" target="_blank" >&lt;code>Server.Orgs.ListOrgs&lt;/code> Artifact&lt;/a>
 or scrolling down the Velociraptor &lt;em>root org&lt;/em> home page.&lt;/li>
&lt;li>Archive the folder and the &lt;code>json.db&lt;/code> file (mind the star)&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-bash">tar czf transport-&amp;lt;org name&amp;gt;.tar.gz &amp;lt;file store&amp;gt;/orgs/&amp;lt;org id&amp;gt;* 
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>Transfer the resulting archive to the destination Velociraptor server.&lt;/li>
&lt;/ol>
&lt;h2 id="importing">Importing&lt;/h2>
&lt;ol>
&lt;li>Decompress the archive under the &lt;code>&amp;lt;file store&amp;gt;/orgs&lt;/code> directory.&lt;/li>
&lt;/ol>

&lt;div class="mynotices tip">
 &lt;div heading=" No orgs folder ">&lt;p>The &lt;code>orgs&lt;/code> directory is created with the first organization. After a fresh install of Velociraptor, it doesn&amp;rsquo;t exist until you create an org. You may also simply create the directory.&lt;/p>
&lt;/div>
&lt;/div>


&lt;ol start="2">
&lt;li>Verify file ownership and permissions are similar to other directories in the file store&lt;/li>
&lt;li>Start Velociraptor&lt;/li>
&lt;li>You should see the organization with all its content as it were on the origin server&lt;/li>
&lt;/ol>

&lt;div class="mynotices tip">
 &lt;div heading=" Can&amp;#39;t see the org ">&lt;p>Upon startup, Velociraptor will run the workers linked to the organization, so you can find a trace of it in the logs, but you may only see it in GUI if you are granted permissions on it. Just edit with your favorite text editor: &lt;code>&amp;lt;file store&amp;gt;/orgs/&amp;lt;org id&amp;gt;/acl/&amp;lt;username&amp;gt;.json.db&lt;/code> to give the access rights to an existing user (or create a user with the name of a user who was allowed to see the org),&lt;/p>
&lt;/div>
&lt;/div>

</description></item><item><title>What to do about error "Plugin info not found"</title><link>https://docs.velociraptor.app/knowledge_base/tips/plugin_not_found/</link><pubDate>Fri, 05 May 2023 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/plugin_not_found/</guid><description>&lt;h1 id="what-to-do-about-error-plugin-info-not-found">What to do about error &amp;ldquo;Plugin info not found&amp;rdquo;&lt;/h1>
&lt;p>Velociraptor VQL queries can run on the server in the context of
server artifacts or notebook queries. Usually server side VQL is used
to post-process collected results, manage the server configuration,
schedule new collections etc.&lt;/p>
&lt;p>However, server side VQL can do a lot more than that - including shell
out to external binaries, read and write files on the server or
connect to external servers. In some deployments (especially shared
deployments) it is desirable to block any functionality on the server
which may interfere with other users or server security or
configuration.&lt;/p>
&lt;p>In recent Velociraptor versions the administrator can add an allow
list to the configuration file. This forces server side VQL to only
register plugins on the allow list, so potentially dangerous plugins
are not present at all (regardless of the Velociraptor permission
model).&lt;/p>
&lt;p>The configuration wizard will offer this functionality using the
question:&lt;/p>
&lt;pre>&lt;code>Do you want to restrict VQL functionality on the server?

This is useful for a shared server where users are not fully trusted.
It removes potentially dangerous plugins like execve(),filesystem access etc.
&lt;/code>&lt;/pre>
&lt;p>If you selected this during configuration you will receive these
errors in the notebook (or using the API) for any plugins not in the
allow list:&lt;/p>
&lt;pre>&lt;code>ERROR:Plugin info not found.
&lt;/code>&lt;/pre>
&lt;p>If you decide you need this particular plugin you can either add to
the allow list in the server configuration file. Or you may remove the
allow list entirely (which allows all plugins to be registered).&lt;/p></description></item><item><title>How do I get the latest release binary?</title><link>https://docs.velociraptor.app/knowledge_base/tips/getting_latest_release/</link><pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/getting_latest_release/</guid><description>&lt;h1 id="how-do-i-get-the-latest-release-binary">How do I get the latest release binary?&lt;/h1>
&lt;p>The Velociraptor release process uses a release branch to prepare a
new release. Releases go through a release candidate (RC) process with
one or more release builds. Sometimes after the release a new patch
release is made to backport critical bug fixes.&lt;/p>
&lt;p>If you need to automate downloading of the latest release binary,
simply use the GitHub API which presents detailed release information
in JSON form. You can use a tool such as &lt;code>jq&lt;/code> to extract the download
URL:&lt;/p>
&lt;pre>&lt;code class="language-bash">WINDOWS_URL=$(curl -s https://api.github.com/repos/velocidex/velociraptor/releases/latest | jq
-r '[.assets | sort_by(.created_at) | reverse | .[] | .browser_download_url | select(test(&amp;quot;windows-amd64.exe$&amp;quot;))][0]')
LINUX_URL=$(curl -s https://api.github.com/repos/velocidex/velociraptor/releases/latest | jq
-r '[.assets | sort_by(.created_at) | reverse | .[] | .browser_download_url | select(test(&amp;quot;linux-amd64$&amp;quot;))][0]')
MACOS_URL=$(curl -s https://api.github.com/repos/velocidex/velociraptor/releases/latest | jq
-r '[.assets | sort_by(.created_at) | reverse | .[] | .browser_download_url | select(test(&amp;quot;darwin-amd64$&amp;quot;))][0]')
&lt;/code>&lt;/pre>
&lt;p>The above &lt;code>jq&lt;/code> filter sorts all asserts by creation data and filters
the relevant binaries, then extracts the most recent binary.&lt;/p>
&lt;p>Powershell can also be used to download the latest binary for 64 bit Windows as per this example:&lt;/p>
&lt;pre>&lt;code class="language-PowerShell">#Get the latest entry from the GitHub API
$VeloLatest = Invoke-WebRequest https://api.github.com/repos/velocidex/velociraptor/releases/latest
#Parse out the url to the binary
$VeloURL = ($VeloLatest.content | convertfrom-json).assets.browser_download_url | select-string windows-amd64.exe | select-object -First 1
#Download and write to a file
Invoke-WebRequest -Uri $VeloURL.tostring() -OutFile velociraptor.exe
#Verify the Authenticode Signature
Get-AuthenticodeSignature .\velociraptor.exe
&lt;/code>&lt;/pre>
&lt;h2 id="verifying-signatures">Verifying signatures&lt;/h2>
&lt;p>Velociraptor releases are signed using Authenticode on Windows as well
as using GPG. To verify the signatures using gpg:&lt;/p>
&lt;pre>&lt;code>$ gpg --verify velociraptor-v0.6.5-2-linux-amd64.sig
gpg: assuming signed data in 'velociraptor-v0.6.5-2-linux-amd64'
gpg: Signature made Wed Jul 27 02:49:33 2022 AEST
gpg: using RSA key 0572F28B4EF19A043F4CBBE0B22A7FB19CB6CFA1
gpg: Good signature from &amp;quot;Velociraptor Team (Velociraptor - Dig deeper! https://docs.velociraptor.app/) &amp;lt;support@velocidex.com&amp;gt;&amp;quot; [unknown]
gpg: WARNING: This key is not certified with a trusted signature!
gpg: There is no indication that the signature belongs to the owner.
Primary key fingerprint: 0572 F28B 4EF1 9A04 3F4C BBE0 B22A 7FB1 9CB6 CFA1
&lt;/code>&lt;/pre>
&lt;p>You may need to import the key first into your keyring:&lt;/p>
&lt;pre>&lt;code>$ gpg --receive-keys 0572F28B4EF19A043F4CBBE0B22A7FB19CB6CFA1
gpg: key B22A7FB19CB6CFA1: public key &amp;quot;Velociraptor Team (Velociraptor - Dig deeper! https://docs.velociraptor.app/) &amp;lt;support@velocidex.com&amp;gt;&amp;quot; imported
gpg: Total number processed: 1
gpg: imported: 1
&lt;/code>&lt;/pre>

&lt;div class="mynotices warning">
 &lt;div heading=" API limiting ">&lt;p>GitHub limits how many unauthenticated API requests are allowed per IP
address. If you need to increase this limit, create a personal access
token (see
&lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token" target="_blank" >https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&lt;/a>
)&lt;/p>
&lt;/div>
&lt;/div>

</description></item><item><title>How to fix "certificate has expired or not yet valid error"?</title><link>https://docs.velociraptor.app/knowledge_base/tips/rolling_certificates/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/rolling_certificates/</guid><description>&lt;h1 id="how-to-fix-certificate-has-expired-or-not-yet-valid-error">How to fix &amp;ldquo;certificate has expired or not yet valid error&amp;rdquo;?&lt;/h1>
&lt;p>When Velociraptor generates a configuration file it also generates
some certificates to secure it&amp;rsquo;s internal PKI.&lt;/p>
&lt;p>The CA certificate is embedded in the client&amp;rsquo;s configuration file and
underpins the entire Velociraptor communications protocol - all
certificates are issued by this internal CA. The Velociraptor CA is
set to expire in 10 years.&lt;/p>
&lt;p>The Server certificate is signed by the CA certificate and is set to
expire in 1 year by default. When the certificate expires, clients
will be unable to connect to the server any more.&lt;/p>
&lt;p>You can check the expiry time of the server certificate using curl and
openssl:&lt;/p>
&lt;pre>&lt;code>$ curl -s -k https://127.0.0.1:8000/server.pem | openssl x509 -text | grep -A 2 Validity
Validity
 Not Before: Apr 13 12:05:46 2022 GMT
 Not After : Apr 13 12:05:46 2023 GMT
&lt;/code>&lt;/pre>
&lt;h2 id="what-happens-when-the-certificate-expires">What happens when the certificate expires?&lt;/h2>
&lt;ul>
&lt;li>When the internal server certificate expires clients will not accept it and
they will refuse to communicate. Clients will show as offline in the GUI and
buffer data as long as possible, subject to their configured buffer limits.&lt;/li>
&lt;li>New GUI sessions will fail with &amp;ldquo;500 Internal Server Error&amp;rdquo; and the response
body &lt;code>{&amp;quot;code&amp;quot;:2,&amp;quot;message&amp;quot;:&amp;quot;Must set a username&amp;quot;}&lt;/code> and fail to load.&lt;/li>
&lt;/ul>
&lt;p>For Velociraptor versions 0.74 and later there is a mechanism to mitigate the
impact of unexpected certificate expiry:&lt;/p>
&lt;ul>
&lt;li>Upon restarting the server service, if the certificate
(&lt;code>Frontend.certificate&lt;/code>) has expired, and if the server.config.yaml contains
the CA private key then it will automatically issue a new cert with the same
validity period as the expired one. This temporary certificate is held in
memory only and is NOT written to the server.config.yaml.&lt;/li>
&lt;li>In the server log you will see the following messages:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-bash">[ERROR] &amp;lt;log_date&amp;gt; Frontend Certificate is not valid: Certificate Valid NotBefore &amp;lt;start_date&amp;gt; and Not After &amp;lt;end_date&amp;gt; but Now is &amp;lt;current_date&amp;gt;. See https://docs.velociraptor.app/knowledge_base/tips/rolling_certificates/
[INFO] &amp;lt;log_date&amp;gt; Found CA private key in config, will automatically rotate keys, but you should consider updating the config file using `velociraptor config rotate`
&lt;/code>&lt;/pre>
&lt;p>If this is the case you should update your server certificate by reissuing a new
one.&lt;/p>
&lt;h2 id="rotating-certificates">Rotating certificates&lt;/h2>
&lt;p>Reissuing a new server certificate can be performed at any time using the
&lt;code>config reissue_certs&lt;/code> command. You can even reissue a certificate with extended
validity before you deploy your server.&lt;/p>
&lt;p>The procedure amounts to generating a new server configuration which is derived
from the old one, and then replacing the old config with the new config.&lt;/p>
&lt;p>The &lt;code>config rotate_keys&lt;/code> command can be used to regenerate both the server
certificate and the associated private key. Although this is not necessary for
operational purposes, it is considered good security practice to rotate keys and
certificates periodically, and particularly after a suspected systems
compromise.&lt;/p>

&lt;div class="mynotices info">
 &lt;div heading="info">&lt;p>For server versions older than 0.72.3 please use the following commands instead
of those shown below:&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Goal&lt;/th>
 &lt;th>Command for the current version&lt;/th>
 &lt;th>Command for versions &amp;lt;0.72.3&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">Reissue only the server cert&lt;/td>
 &lt;td>&lt;code>velociraptor config reissue_certs&lt;/code>&lt;/td>
 &lt;td>&lt;code>velociraptor config reissue_key&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Reissue the server cert and&lt;br> also the private key&lt;/td>
 &lt;td>&lt;code>velociraptor config rotate_keys&lt;/code>&lt;/td>
 &lt;td>&lt;code>velociraptor config rotate_key&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>


&lt;h4 id="setting-a-non-standard-validity">Setting a non-standard validity&lt;/h4>
&lt;p>When reissuing the certificate the &lt;code>--validity&lt;/code> flag can be used to extend the
validity beyond the default of one year. For example, to generate a config
containing a server certificate which is valid for 2 years, you would run the
command:&lt;/p>
&lt;pre>&lt;code class="language-sh">velociraptor --config server.config.yaml config reissue_certs --validity 730 &amp;gt; new.server.config.yaml
&lt;/code>&lt;/pre>
&lt;p>If you expect your server to be a long-term instance then you don&amp;rsquo;t have to
start with the default 1-year validity and wait for the certificate to expire.
You can generate a new config on day 1 based on the initial config using the
&lt;code>config reissue_certs&lt;/code> command. You can then use the new config for the new
server installation.&lt;/p>

&lt;div class="mynotices tip">
 &lt;div heading="tip">&lt;p>In version 0.74 and later the configuration wizard (&lt;code>velociraptor config generate -i&lt;/code>) allows you to issue the server certificate with either 1-year,
2-year or 10-year validity.&lt;/p>
&lt;/div>
&lt;/div>


&lt;h4 id="option-1-reissue-only-the-server-cert">Option 1: Reissue only the server cert&lt;/h4>
&lt;p>To rotate server certificates, use the following command to generate a new
configuration file containing rotated certificates:&lt;/p>
&lt;pre>&lt;code>$ velociraptor config reissue_certs --config /etc/velociraptor/server.config.yaml &amp;gt; /tmp/new_key.config.yaml
&lt;/code>&lt;/pre>
&lt;p>The &lt;code>config reissue_key&lt;/code> command updates the following configuration items:&lt;/p>
&lt;ul>
&lt;li>&lt;code>GUI.gw_certificate&lt;/code>&lt;/li>
&lt;li>&lt;code>Frontend.certificate&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>CA.private_key&lt;/code>, &lt;code>Client.ca_certificate&lt;/code>, &lt;code>GUI.gw_private_key&lt;/code>, and &lt;code>Frontend.private_key&lt;/code> are preserved.&lt;/p>
&lt;h4 id="option-2-reissue-the-server-cert-and-also-the-private-key">Option 2: Reissue the server cert and also the private key&lt;/h4>
&lt;p>Alternatively, you can regenerate the server&amp;rsquo;s private keys and rotate the
certificates at the same time:&lt;/p>
&lt;pre>&lt;code>$ velociraptor config rotate_keys --config /etc/velociraptor/server.config.yaml &amp;gt; /tmp/new_key.config.yaml
&lt;/code>&lt;/pre>
&lt;p>The &lt;code>config rotate_keys&lt;/code> command updates the following configuration items:&lt;/p>
&lt;ul>
&lt;li>&lt;code>GUI.gw_certificate&lt;/code>&lt;/li>
&lt;li>&lt;code>GUI.gw_private_key&lt;/code>&lt;/li>
&lt;li>&lt;code>Frontend.certificate&lt;/code>&lt;/li>
&lt;li>&lt;code>Frontend.private_key&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>CA.private_key&lt;/code> and &lt;code>Client.ca_certificate&lt;/code> are preserved.&lt;/p>
&lt;p>The previous two commands will not affect the CA private key and
certificate, which is valid for 10 years, as described previously.&lt;/p>
&lt;p>You can view the new certificate using jq and openssl (here &lt;code>jq&lt;/code> is
used to show the PEM certificate of the frontend and &lt;code>openssl&lt;/code> is used
to decode it)&lt;/p>
&lt;pre>&lt;code>$ velociraptor --config /tmp/new_key.config.yaml config show --json | jq -r .Frontend.certificate | openssl x509 -text | grep -A 2 Validity
Validity
 Not Before: Apr 25 21:01:51 2022 GMT
 Not After : Apr 25 21:01:51 2023 GMT
&lt;/code>&lt;/pre>
&lt;p>Now back up the old configuration file and replace it with the new
file, then restart the server. Clients should reconnect automatically.&lt;/p></description></item><item><title>How to initialize a Velociraptor server with custom artifacts?</title><link>https://docs.velociraptor.app/knowledge_base/tips/startup_artifacts/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/startup_artifacts/</guid><description>&lt;h1 id="how-to-initialize-a-velociraptor-server-with-custom-artifacts">How to initialize a Velociraptor server with custom artifacts?&lt;/h1>
&lt;p>Velociraptor frontend process has a component called the &lt;strong>Artifact
Repository&lt;/strong>. This component knows about all the artifacts that are
defined.&lt;/p>
&lt;p>When the server starts up, it loads artifacts into the repository from the
following sources.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Built-in artifacts that are embedded into the binary itself (compiled in).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Custom artifacts that are defined inside the configuration file itself.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Directories containing artifact YAML files that can be defined in one or more
of the following ways:&lt;/p>
&lt;ul>
&lt;li>specified by the &lt;code>--definitions&lt;/code> CLI flag: a single directory&lt;/li>
&lt;li>specified by &lt;code>Frontend.artifact_definitions_directory&lt;/code> in the config: a
single directory.&lt;/li>
&lt;li>specified by &lt;code>defaults.artifact_definitions_directories&lt;/code> in the config: a
list of directories.&lt;/li>
&lt;/ul>
&lt;p>Velociraptor will search these directories recursively for artifact YAML
files.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Finally, the server will load artifacts from the configured
filestore path under &lt;code>&amp;lt;filestore&amp;gt;/artifact_definitions&lt;/code>. These are
usually the custom artifacts defined through the GUI.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The location of where an artifact came from does not matter,
Velociraptor organizes artifacts internally using the artifact
name. It is customary to denote custom artifacts with the &lt;code>Custom.&lt;/code>
prefix but this is not mandatory.&lt;/p>

&lt;div class="mynotices warning">
 &lt;div heading="warning">&lt;p>Velociraptor does not allow a custom artifact to override a built in
artifact (i.e. have the same name). Built in artifacts are protected
because overriding built in artifacts may break the proper
functionality of Velociraptor. If you want to customize a built in
artifact, simply change the name when you save it.&lt;/p>
&lt;p>Velociraptor considers artifacts defined in the config file, or given
in the &lt;code>--definitions&lt;/code> directory as &amp;ldquo;built in&amp;rdquo;.&lt;/p>
&lt;/div>
&lt;/div>


&lt;h2 id="specifying-a-startup-artifact">Specifying a startup artifact.&lt;/h2>
&lt;p>When the Velociraptor server is run for the very first time, it
creates an install record in the filestore
&lt;code>&amp;lt;filestore&amp;gt;/config/install_time.json.db&lt;/code>. It can then setup initial
artifacts to collect as specified by the config file:&lt;/p>
&lt;pre>&lt;code class="language-yaml">Frontend:
 default_client_monitoring_artifacts:
 - Generic.Client.Stats
 initial_server_artifacts:
 - MyServerArtifact
 default_server_monitoring_artifacts:
 - MyCustomServerMonitor
&lt;/code>&lt;/pre>
&lt;p>In the above snippet, we see the following parameters:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>default_client_monitoring_artifacts&lt;/code> specifies the initial client
monitoring table that will be created. By default, Velociraptor
collects endpoint CPU and Memory telemetry from all endpoints. You
can remove this, or specify a different client artifact to collect.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>default_server_monitoring_artifacts&lt;/code> specifies an initial set of
server event artifacts to collect.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>initial_server_artifacts&lt;/code> is a list of server artifacts that will
be automatically launched on the server on initial startup. You can
specify the names of any artifacts here (including custom artifacts)
which can be bootstrapped to perform any kinds of server
configuration needed. The artifacts are simply scheduled and will
appear in the usual &lt;code>Server Artifacts&lt;/code> screen.&lt;/p>
&lt;/li>
&lt;/ul>

&lt;div class="mynotices note">
 &lt;div heading="note">&lt;p>Currently it is not possible to specify parameters for initial
artifacts so if you need to tweak the parameters it is best to create
a custom artifact that in turn launches the needed artifacts with the
correct parameters. You can find an example below.&lt;/p>
&lt;/div>
&lt;/div>


&lt;h2 id="initializing-the-server-using-a-custom-artifact">Initializing the server using a custom artifact.&lt;/h2>
&lt;p>For more complex initialization tasks you can write a custom artifact
that will be collected the first time the server is started. The
artifact can import any custom artifacts and start monitoring
queries. The custom artifact should take no arguments. It is most
reliable to add the custom artifact to the configuration file itself
to ensure it is loaded and ready when the server initializes.&lt;/p>
&lt;p>For example, the relevant part of the server configuration might be:&lt;/p>
&lt;pre>&lt;code class="language-yaml">autoexec:
 artifact_definitions:
 - name: InitializeServer
 description: Setup the server on first run
 sources:
 - query: |
 LET _ &amp;lt;= SELECT *
 FROM Artifact.Server.Import.CuratedSigma()

 SELECT add_client_monitoring(
 label=&amp;quot;Monitoring&amp;quot;,
 artifact=&amp;quot;Windows.Hayabusa.Monitoring&amp;quot;,
 parameters=dict(RuleLevel=&amp;quot;Critical, High, and Medium&amp;quot;,
 RuleStatus=&amp;quot;Stable&amp;quot;)) AS Monitoring,
 artifact_set_metadata(name=&amp;quot;InitializeServer&amp;quot;, hidden=TRUE)
 FROM scope()

Frontend:
 initial_server_artifacts:
 - InitializeServer
&lt;/code>&lt;/pre>
&lt;p>The above parts:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>An artifact is defined inline in the config file.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The artifact imports the Sigma artifacts from the velociraptor
sigma projects (you can add your own URLs to import your own set of
custom artifacts).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A client monitoring artifact is added using the &lt;code>Hayabusa&lt;/code> Sigma
artifact targeting the &amp;ldquo;Monitoring&amp;rdquo; label. Parameters to the
artifact are passed here.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Finally the server is configured to collect the &lt;code>InitializeServer&lt;/code>
artifact when first run.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>What do I do about "version GLIBC_2.xx not found" errors?</title><link>https://docs.velociraptor.app/knowledge_base/tips/glibc_errors/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/glibc_errors/</guid><description>&lt;h1 id="what-do-i-do-about-version-glibc_2xx-not-found-errors">What do I do about &amp;ldquo;version GLIBC_2.xx not found&amp;rdquo; errors?&lt;/h1>

&lt;div class="mynotices tip">
 &lt;div heading=" TLDR - use the `musl` build ">&lt;p>Use the &lt;code>musl&lt;/code> built binary for older Linux systems. You can
find this build together with the others on the release page with the
&lt;code>-musl&lt;/code> suffix in the name.&lt;/p>
&lt;/div>
&lt;/div>


&lt;p>On Linux, binaries always link to the C library dynamically. This
happens even with a static binary like Velociraptor. The C library is
intimately linked to the version of Linux installed on the system and
it is generally not possible to upgrade the C library without also
upgrading the entire Linux distribution.&lt;/p>
&lt;p>During the build process, the compiler creates a version requirement
for this C library embedded in the binary itself. You can see the
exact version of all libraries needed at runtime using the &lt;code>read_elf&lt;/code>
program:&lt;/p>
&lt;pre>&lt;code>$ readelf -V velociraptor-v0.6.4-linux-amd64
...
Version needs section '.gnu.version_r' contains 3 entries:
 Addr: 0x00000000004106a0 Offset: 0x0106a0 Link: 7 (.dynstr)
 000000: Version: 1 File: libdl.so.2 Cnt: 1
 0x0010: Name: GLIBC_2.2.5 Flags: none Version: 10
 0x0020: Version: 1 File: libpthread.so.0 Cnt: 2
 0x0030: Name: GLIBC_2.3.2 Flags: none Version: 6
 0x0040: Name: GLIBC_2.2.5 Flags: none Version: 5
 0x0050: Version: 1 File: libc.so.6 Cnt: 8
 0x0060: Name: GLIBC_2.11 Flags: none Version: 12
 0x0070: Name: GLIBC_2.7 Flags: none Version: 11
 0x0080: Name: GLIBC_2.14 Flags: none Version: 9
 0x0090: Name: GLIBC_2.15 Flags: none Version: 8
 0x00a0: Name: GLIBC_2.4 Flags: none Version: 7
 0x00b0: Name: GLIBC_2.3.4 Flags: none Version: 4
 0x00c0: Name: GLIBC_2.2.5 Flags: none Version: 3
 0x00d0: Name: GLIBC_2.3 Flags: none Version: 2
&lt;/code>&lt;/pre>
&lt;p>In the above example this binary requires at least &lt;code>GLIBC_2.15&lt;/code> to
run. You can tell what version of libc you have on any particular
system using the local package manager.&lt;/p>
&lt;pre>&lt;code>$ dpkg -l libc6:amd64
Desired=Unknown/Install/Remove/Purge/Hold
| Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend
|/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad)
||/ Name Version Architecture Description
+++-==============-=============-============-=================================
ii libc6:amd64 2.33-0ubuntu5 amd64 GNU C Library: Shared libraries
&lt;/code>&lt;/pre>
&lt;p>In this case this system has GLIBC version 2.33 which is higher than
the minimum required version of 2.15.&lt;/p>
&lt;p>However for older systems, the locally installed GLIBC may be older
than required. This results in an error when we attempt to run it. For
example on an old CentOS 6 system:&lt;/p>
&lt;pre>&lt;code>$ ./velociraptor-v0.6.4-linux-amd64
./velociraptor-v0.6.4-linux-amd64: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by ./velociraptor-v0.6.4-linux-amd64)
./velociraptor-v0.6.4-linux-amd64: /lib64/libc.so.6: version `GLIBC_2.15' not found (required by ./velociraptor-v0.6.4-linux-amd64)
&lt;/code>&lt;/pre>
&lt;p>Since the version requirement is added at build time, we really need
to build on an old system to ensure the linked to GLIBC is old enough.&lt;/p>
&lt;p>Velociraptor uses the &lt;a href="https://www.musl-libc.org/" target="_blank" >musl&lt;/a>
 project to
build completely static binaries independent of the GLIBC installed on
the system. While this feature is considered experimental it seems to
work well and produces truly portable binaries.&lt;/p>
&lt;p>We recommend that version to only be used for clients on older
systems, although it might also work for a server too (but really you
should be running servers on modern patched systems).&lt;/p></description></item><item><title>How do I use my own SSL certificates?</title><link>https://docs.velociraptor.app/knowledge_base/tips/ssl/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/ssl/</guid><description>&lt;h1 id="how-do-i-use-my-own-ssl-certificates">How do I use my own SSL certificates?&lt;/h1>
&lt;p>Use case: For an on-premises deployment, Let&amp;rsquo;s Encrypt may not be an option. You may want to use your own enterprise/corporate Certificate Authority (CA) or another 3rd party.&lt;/p>
&lt;p>Thanks to recent enhancements by the Velociraptor developers, this is quite a simple task. The below is a simple test configuration used and may need adapting to your environment.&lt;/p>
&lt;p>Prior to commencing we have a plaintext PEM private key, certificate for our Velociraptor server, and the certificate chain of our enterprise CA, including the root and multiple intermediaries.&lt;/p>
&lt;h3 id="generate-the-configuration">Generate the configuration&lt;/h3>
&lt;p>Using Ubuntu we generated a stock standard &amp;ldquo;Self-signed SSL&amp;rdquo; configuration:&lt;/p>
&lt;p>&lt;code>./velociraptor-v0.6.3-2-linux-amd64 config generate -i&lt;/code>&lt;/p>
&lt;img width="491" alt="image" src="https://user-images.githubusercontent.com/30587915/163787136-f9e6f16f-5119-4cd0-ba43-741ab64cdc42.png">
&lt;h3 id="update-the-serverconfigyaml">Update the server.config.yaml&lt;/h3>
&lt;p>Locate the frontend section and add the &lt;code>tls_certificate_filename&lt;/code> and &lt;code>tls_private_key_filename&lt;/code> parameters. Enter the absolute path to these files. For testing, we placed in /etc however there are better places for production use.&lt;/p>
&lt;pre>&lt;code class="language-yaml">Frontend:
 tls_certificate_filename: /etc/velociraptor.pem
 tls_private_key_filename: /etc/velociraptor.key
&lt;/code>&lt;/pre>
&lt;img width="221" alt="image" src="https://user-images.githubusercontent.com/30587915/163787153-9734cbb8-ddbf-4140-b4d6-1c89e19afa7c.png">
&lt;h3 id="update-the-clientconfigyaml">Update the client.config.yaml&lt;/h3>
&lt;p>In the client section modify &lt;code>use_self_signed_ssl&lt;/code> to be false, and add the CA root/intermediary certificates to be trusted by the client:&lt;/p>
&lt;pre>&lt;code class="language-yaml">use_self_signed_ssl: false

Crypto:
 root_certs: |
 -----BEGIN CERTIFICATE-----
 XXXXX
 -----END CERTIFICATE-----
 -----BEGIN CERTIFICATE-----
 XXXXX
 -----END CERTIFICATE-----
 -----BEGIN CERTIFICATE-----
 XXXXX
 -----END CERTIFICATE-----
 ...
&lt;/code>&lt;/pre>
&lt;h3 id="test">Test&lt;/h3>
&lt;p>Launching the server we should be able to connect to the GUI using our new certificate. Note this must be trusted by browser/system to prevent errors.&lt;/p>
&lt;p>Launching the client, it should connect securely without error, using the trusted CA chain and the new server certificate.&lt;/p>
&lt;p>No changes need to be made to the pinned certificate name, nor do any certificates need to be modified in the configuration files.&lt;/p></description></item><item><title>How do I set a proxy for client communications?</title><link>https://docs.velociraptor.app/knowledge_base/tips/proxy/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/proxy/</guid><description>&lt;h1 id="how-do-i-set-a-proxy-for-client-communications">How do I set a proxy for client communications?&lt;/h1>
&lt;p>Many enterprise environments require a proxy to be set before outbound
web communications is allowed. The Velociraptor client uses HTTP to
communicate with the server, and therefore must use a proxy to
connect in such environments.&lt;/p>
&lt;p>It is possible to specify the HTTP proxy using the configuration file
or environment variables.&lt;/p>
&lt;h3 id="environment-variables">Environment variables.&lt;/h3>
&lt;p>Environment variables may be configured using group policy or similar
methods. Setting the &lt;code>http_proxy&lt;/code> and &lt;code>https_proxy&lt;/code> environment
variables will force the client to go through the specified proxy.&lt;/p>
&lt;p>The rules for environment variables are described
&lt;a href="https://go.dev/src/net/http/transport.go#422" target="_blank" >here&lt;/a>
:&lt;/p>
&lt;pre>&lt;code class="language-go">// ProxyFromEnvironment returns the URL of the proxy to use for a
// given request, as indicated by the environment variables
// HTTP_PROXY, HTTPS_PROXY and NO_PROXY (or the lowercase versions
// thereof). HTTPS_PROXY takes precedence over HTTP_PROXY for https
// requests.
//
// The environment values may be either a complete URL or a
// &amp;quot;host[:port]&amp;quot;, in which case the &amp;quot;http&amp;quot; scheme is assumed.
// The schemes &amp;quot;http&amp;quot;, &amp;quot;https&amp;quot;, and &amp;quot;socks5&amp;quot; are supported.
// An error is returned if the value is a different form.
&lt;/code>&lt;/pre>
&lt;h3 id="setting-a-proxy-in-the-configuration-file">Setting a proxy in the configuration file&lt;/h3>
&lt;p>You can also hard code the proxy in the configuration file&amp;rsquo;s Client
section:&lt;/p>
&lt;pre>&lt;code class="language-yaml">Client:
 proxy: http://proxy.example.com:3128/
 server_urls:
 - https://velo.example.com:8100/
&lt;/code>&lt;/pre></description></item><item><title>How can I configure Velociraptor for multiple SSO providers</title><link>https://docs.velociraptor.app/knowledge_base/tips/multiple_oauth/</link><pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/multiple_oauth/</guid><description>&lt;h1 id="how-can-i-configure-velociraptor-for-multiple-sso-providers">How can I configure Velociraptor for multiple SSO providers&lt;/h1>
&lt;p>Velociraptor can be configured to use a single SSO provider using the usual configuration building wizard (see &lt;a href="https://docs.velociraptor.app/docs/deployment/server/#configuring-google-oauth-sso" target="_blank" >Here&lt;/a>
), but the wizard does not offer to configure multiple providers.&lt;/p>
&lt;p>Sometimes we want to have multiple providers so we can allow users from another organization to be able to log into Velociraptor. To do this we need to configure the SSO authenticator manually in the configuration file.&lt;/p>
&lt;p>Simply run &lt;code>velociraptor config generate -i&lt;/code> and select the OAuth provider for the first provider. In the end your config file will have the following section where &lt;code>oauth_client_id&lt;/code> and &lt;code>oauth_client_secret&lt;/code> refer to the Google OAuth app you created:&lt;/p>
&lt;pre>&lt;code class="language-yaml">GUI:
 ... more settings ...
 authenticator:
 type: Google
 oauth_client_id: 12345.apps.googleusercontent.com
 oauth_client_secret: XYZ1234
&lt;/code>&lt;/pre>
&lt;p>To provide multiple authenticators, you will need to manually change to the &lt;code>multi&lt;/code> authenticator type:&lt;/p>
&lt;pre>&lt;code class="language-yaml">GUI:
 ... more settings ...
 authenticator:
 type: multi
 sub_authenticators:
 - type: Google
 oauth_client_id: 12345.apps.googleusercontent.com
 oauth_client_secret: XYZ1234
 - type: Github
 oauth_client_id: 123456
 oauth_client_secret: 76521376523
 - type: oidc
 oidc_issuer: https://accounts.google.com
 oidc_name: Rapid7
 avatar: https://example.com/avatar.png
 oauth_client_id: XXXXX
 oauth_client_secret: AAAAA
&lt;/code>&lt;/pre>
&lt;p>Note that you can have multiple &lt;code>OIDC&lt;/code> authenticators and each can have a separate name and an icon associated with it (e.g. if multiple organizations use separate Okta logins).&lt;/p>
&lt;p>






&lt;figure id="47a0513752ad43ed9f3f48bd62462858">
 &lt;div data-featherlight="#47a0513752ad43ed9f3f48bd62462858" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/multiple_oauth/https://user-images.githubusercontent.com/3856546/160241517-c2bf85e5-7d5d-4d3b-ac24-b2bfbda5436b.png" alt="Logging in with multiple providers" />
 &lt;/div>
 &lt;figcaption>
 Logging in with multiple providers
 &lt;/figcaption>
&lt;/figure>


&lt;/p>
&lt;h2 id="granting-a-user-a-role">Granting a user a role.&lt;/h2>
&lt;p>Velociraptor will trust any of the configured authenticators, to identify the user and based on the username, grant the user the appropriate roles on the Velociraptor server. You will need to grant the user a role either through the command line:&lt;/p>
&lt;pre>&lt;code>velociraptor user add --role administrator mike@gmail.comm
&lt;/code>&lt;/pre>
&lt;p>Or via a notebook cell:&lt;/p>
&lt;pre>&lt;code class="language-sql">SELECT user_create(user=&amp;quot;mike@gmail.com&amp;quot;, role=&amp;quot;administrator&amp;quot;)
FROM scope()
&lt;/code>&lt;/pre>

&lt;div class="mynotices warning">
 &lt;div heading=" Trusting multiple providers ">&lt;p>Be aware that trusting multiple identity providers can result in account hijack if a user can get an account of the same name on another provider. Velociraptor just uses the account name provided by the OAuth provider to grant access and does not keep track of which provider actually identified the user.&lt;/p>
&lt;p>In simple terms, if a user has username &amp;ldquo;mike&amp;rdquo; on &lt;code>OIDC&lt;/code> provider 1 and another user can get say a Github account for the user &amp;ldquo;mike&amp;rdquo;, then the second user can impersonate the first user by logging in with the second provider.&lt;/p>
&lt;/div>
&lt;/div>

</description></item><item><title>How do I debug the client while it is running?</title><link>https://docs.velociraptor.app/knowledge_base/tips/debugging_clients/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/debugging_clients/</guid><description>&lt;h1 id="how-do-i-debug-the-client-while-it-is-running">How do I debug the client while it is running?&lt;/h1>
&lt;p>Sometimes we collect artifacts from clients but for some reason things seem to take longer than expected. Velociraptor has mechanisms to gain visibility into how clients behave and what queries are running.&lt;/p>
&lt;h2 id="query-logs">Query logs&lt;/h2>
&lt;p>The first port of call is viewing the query logs in the logs tab of the relevant collection.&lt;/p>
&lt;p>






&lt;figure id="7c86ff2b12e4fdf25f00b8e09d60698f">
 &lt;div data-featherlight="#7c86ff2b12e4fdf25f00b8e09d60698f" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/debugging_clients/https://user-images.githubusercontent.com/3856546/159195874-ec6c8322-cb70-4254-861a-95888db94201.png" alt="Viewing the query logs" />
 &lt;/div>
 &lt;figcaption>
 Viewing the query logs
 &lt;/figcaption>
&lt;/figure>


&lt;/p>
&lt;p>As the query is running, it will emit a message to let us know that it is waiting for rows. We use this to determine that the query is still running on the client.&lt;/p>
&lt;h2 id="collecting-profiles">Collecting profiles&lt;/h2>
&lt;p>The &lt;code>Generic.Client.Profile&lt;/code> artifact allows us to collect internal state of the client. Simply collect this from the client, while other queries are running&lt;/p>
&lt;p>






&lt;figure id="a0871aaf4dcd4891fffd377e8a831ecf">
 &lt;div data-featherlight="#a0871aaf4dcd4891fffd377e8a831ecf" class="figure">
 &lt;img src="https://docs.velociraptor.app/knowledge_base/tips/debugging_clients/https://user-images.githubusercontent.com/3856546/159196011-28808471-4111-42ba-bfd3-819381bdf596.png" alt="Client Profile" />
 &lt;/div>
 &lt;figcaption>
 Client Profile
 &lt;/figcaption>
&lt;/figure>


&lt;/p>
&lt;p>The most common thing to collect include:&lt;/p>
&lt;ol>
&lt;li>The Goroutine dump shows a stack trace of all currently running goroutines (similar to threads). This helps us understand if there is a deadlock or another bug.&lt;/li>
&lt;li>The logs delivers a recent dump of client logs. Normally the client does &lt;strong>not&lt;/strong> write it&amp;rsquo;s logs to file to avoid information leakage issues. You can see the logs on the console by running the client with the &lt;code>-v&lt;/code> flag, but each client also keeps the last 1000 messages in a memory buffer so they can be available if needed. This option sends the recent logs to the server.&lt;/li>
&lt;li>Query logs are a recent log of VQL queries running on the endpoint. This gives us an idea of exactly what the client is doing.&lt;/li>
&lt;li>Metrics are internal program counters that provide visibility of performance related items.&lt;/li>
&lt;/ol>
&lt;p>When asking for help on Discord or our mailing list, we will often ask for the profiles collected from the client (or server). At a minimum we will need the above items to diagnose any issues.&lt;/p>

&lt;div class="mynotices tip">
 &lt;div heading="tip">&lt;p>The nice thing about collecting profiles is that the client does &lt;strong>not&lt;/strong> need to be restarted and we do not need to run a special debug build - all clients are capable of collecting profile information at any time.&lt;/p>
&lt;/div>
&lt;/div>


&lt;h3 id="references">References&lt;/h3>
&lt;p>You can read more about &lt;a href="https://docs.velociraptor.app/blog/2020/2020-08-16-profiling-the-beast-58913437fd16/" target="_blank" >profiling Velociraptor here&lt;/a>
.&lt;/p></description></item><item><title>How do I deploy the client as agentless (without install)?</title><link>https://docs.velociraptor.app/knowledge_base/tips/deploying_in_agentless_mode/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://docs.velociraptor.app/knowledge_base/tips/deploying_in_agentless_mode/</guid><description>&lt;h1 id="how-do-i-deploy-the-client-as-agentless-without-install">How do I deploy the client as agentless (without install)?&lt;/h1>
&lt;p>Sometimes we need to deploy Velociraptor in an IR and can not install
it permanently as a service.&lt;/p>
&lt;h2 id="windows-environments">Windows Environments&lt;/h2>
&lt;p>It is possible to deploy the client using Group Policy by using
&lt;code>Scheduled task&lt;/code> feature to cause domain connected machines to run the
client. See details &lt;a href="https://docs.velociraptor.app/blog/html/2019/03/02/agentless_hunting_with_velociraptor/" >here&lt;/a>
.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The first step is to place the client and the generated
&lt;code>client.config.yaml&lt;/code> on a public read only windows share.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Update the config file&amp;rsquo;s writeback location to somewhere writable
on the client (e.g. &lt;code>C:\Windows\Temp\velo.writeback.yaml&lt;/code>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Next create a &lt;code>Scheduled Task&lt;/code> in a new group policy object that
applies to the relevant OU.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The scheduled task should be launched as &lt;code>NT_AUTHORITY\SYSTEM&lt;/code> from
the read only share. With the appropriate command line. For example:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>\\dc\deployment\velociraptor.exe --config \\dc\deployment\client.config.yaml client --mutant MyVeloName
&lt;/code>&lt;/pre>

&lt;div class="mynotices warning">
 &lt;div heading=" Controlling number of instances ">&lt;p>Window&amp;rsquo;s Group Policy allows setting only a single instance of the
program to run at the time, however we found in practice this is not
reliable and sometimes GPO will launch dozens of copies of
Velociraptor over time. To avoid this we use the &lt;code>--mutant&lt;/code> flag which
will exit if a mutant of this name already exists.&lt;/p>
&lt;/div>
&lt;/div>


&lt;h2 id="linux-environments">Linux Environments&lt;/h2>
&lt;h3 id="systemd">Systemd&lt;/h3>
&lt;p>It is possible to execute a program in a &amp;ldquo;transient scope&amp;rdquo;, which enables it to be controlled and inspected just like a regular service (unit) in Linux, without the need to create persistent configurations.
Using &lt;code>systemd-run&lt;/code> the process will be executed and its parent will be the &lt;code>init&lt;/code> process, and will not terminate until the host is rebooted.&lt;/p>
&lt;p>To execute the Velociraptor binary run the following:&lt;/p>
&lt;pre>&lt;code>systemd-run -u velociraptor_tmp /tmp/velociraptor.bin client --config /tmp/client.config.yaml
&lt;/code>&lt;/pre>
&lt;p>Once the service is running, you should now be free to terminate the SSH / management session without terminating the process.&lt;/p>
&lt;p>You can manually terminate the service with: &lt;code>systemctl stop velociraptor_tmp.service &lt;/code>&lt;/p>
&lt;p>You can check it&amp;rsquo;s status with: &lt;code>systemctl status velociraptor_tmp.service&lt;/code>&lt;/p>

&lt;div class="mynotices warning">
 &lt;div heading=" Temporary locations ">&lt;p>On Linux /tmp is cleaned up by a service, which gets triggered on shutdown.
You will need to arrange for the Velociraptor binary and configuration file to be transferred again if the host reboots.&lt;/p>
&lt;/div>
&lt;/div>


&lt;p>You can read more about the &lt;code>systemd-run&lt;/code> here for flags etc: &lt;a href="https://www.freedesktop.org/software/systemd/man/systemd-run.html" target="_blank" >https://www.freedesktop.org/software/systemd/man/systemd-run.html&lt;/a>
&lt;/p></description></item></channel></rss>